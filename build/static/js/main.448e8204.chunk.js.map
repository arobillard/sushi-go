{"version":3,"sources":["base.js","components/ui-elements/Header.js","components/ui-elements/Footer.js","cardData.js","components/ui-elements/LobbyPlayerGrid.js","components/ui-elements/AddUser.js","components/ui-elements/Lobby.js","components/ui-elements/CardSushiFull.js","components/ui-elements/CardSushiSm.js","components/ui-elements/PointsGridItem.js","components/ui-elements/RoundEnd.js","components/ui-elements/GameBoard.js","components/ui-elements/Settings.js","components/App.js","helpers.js","components/pages/Join.js","components/Router.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Header","displayTitle","undefined","props","subtitle","to","className","displaySubtitle","handleSettings","handleSettingsDisplay","displayGamecode","gamecode","host","gameStart","onClick","src","alt","this","React","Component","Footer","href","target","rel","cards","deck","Object","keys","forEach","key","i","count","type","push","LobbyPlayerGrid","emptyUsers","addAmount","users","length","blanks","handleDeleteUser","e","deleteUser","currentTarget","dataset","user","map","color","userName","data-user","aria-label","AddUser","handleAddUser","preventDefault","newUser","value","userCount","userKeys","usedColors","includes","addUser","colorOptions","colors","index","indexOf","splice","id","name","defaultChecked","required","htmlFor","disabled","onSubmit","ref","userNameInput","placeholder","defaultValue","localUser","Lobby","usersDisplay","startGame","CardSushiFull","state","confirm","handlePlayCard","setState","askConfirm","confirmCard","cancelCard","card","closest","userPlayCard","displayMakiIcons","cardData","makiIcons","family","showConfirm","data-card","revealed","title","scoreDescS","scoreDescL","wasabiApplied","cancelled","img","scoreDesc","CardSushiSm","PointsGridItem","score","updateScore","scoreInterval","setInterval","setTimeout","clearInterval","userData","RoundEnd","handleStartNextRound","startNewRound","handleExitToLobby","exitToLobby","handleRestart","nextRoundBtn","round","widthL","userAmount","GameBoard","handVisible","teaRef","createRef","playCard","showHand","hand","hands","handRef","handFamilies","handDisplay","handLocked","playedCards","ready","cardCount","cardCounter","handleHandVisibility","tabIndex","myPlayedCards","largestFam","makiCount","famCards","children","teaCards","displayDessert","displayPlayerPlayedCards","userColumns","dessertDisplay","userReady","handleReady","setReady","window","addEventListener","settingsDisplayed","numOpponents","roundEnd","newRound","calculateScore","Settings","App","misoPlayed","roundScoreCalculated","fullDeck","iceCreamLayOver","deckReset","console","log","newGame","newFullDeck","dealCards","handSize","hCounter","dCounter","h","cardNumber","Math","floor","random","keepDesserts","wasabiWaiting","doubleWasabiWaiting","tripleWasabiWaiting","cardsCopy","lastCard","pop","scored","oldHandRef","lastCardRef","lastCardPlayed","newHand","slice","revealCards","makiCompare","userCards","tempura","sashimi","makiScore","teaCount","desserts","famCount","tempuraScore","sashimiScore","famCountOrdered","entries","sort","a","b","aPrice","dessertScore","firstPlace","secondPlace","thirdPlace","makiWinnerOrder","winner","subtitleDisplay","settingsDisplay","gameBoardDisplay","match","params","localStorageRef","localStorage","getItem","savedState","JSON","parse","syncState","context","setItem","stringify","role","slugify","text","toString","toLowerCase","replace","gameCode","letters","firstLetter","secondLetter","thirdLetter","Join","gcInput","joinGame","current","history","Router","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.448e8204.chunk.js","sourcesContent":["import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDNF0tW0P_WQmbTug2hN7zG97MDKpKDVvQ\",\n  authDomain: \"arobillard-games.firebaseapp.com\",\n  databaseURL: \"https://arobillard-games.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n  displayTitle = () => {\n    if (this.props.subtitle === undefined) {\n      return (\n        <Link to=\"/\">\n          <h1 className=\"logo\">S<span className=\"s-hide\">ushi </span>G<span className=\"s-hide\">o</span>!</h1>\n        </Link>\n      )\n    } else {\n      return (\n        <Link to=\"/\">\n          <strong className=\"logo\">S<span className=\"s-hide\">ushi </span>G<span className=\"s-hide\">o</span>!</strong>\n        </Link>\n      )\n    }\n  }\n\n  displaySubtitle = () => {\n    if (this.props.subtitle !== undefined) {\n      return (\n          <h1 className=\"subtitle gutter-2 push-0 spread-right\">{this.props.subtitle}</h1>\n      )\n    }\n  }\n\n  handleSettings = () => {\n    this.props.handleSettingsDisplay()\n  }\n\n  displayGamecode = () => {\n    if (this.props.gamecode !== undefined) {\n      if (this.props.host && this.props.gameStart) {\n        return (\n          <div className=\"game-info-wrap pad-t-1-2 pad-b-1-2\">\n            <button onClick={this.handleSettings} className=\"push-r-2 ar-icon-wrap\"><i className=\"ar-icon-1-1-2 push-1-2 push-r-1-2\"><img src=\"images/i-settings.svg\" alt=\"\" /></i><span className=\"ar-icon-label\">Settings</span></button>\n            <p className=\"push-0\"><span className=\"gamecode-title\">Gamecode: </span><span className=\"gamecode push-l\">{this.props.gamecode}</span></p>\n          </div>\n        )\n      }\n      return (\n        <div className=\"game-info-wrap pad-t-1-2 pad-b-1-2\">\n          <p className=\"push-0\"><span className=\"gamecode-title\">Gamecode: </span><span className=\"gamecode push-l\">{this.props.gamecode}</span></p>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <header className='masthead'>\n        <div className=\"wrapper gutter\">\n          {this.displayTitle()}\n          {this.displaySubtitle()}\n          {this.displayGamecode()}\n        </div>\n      </header>\n    )\n  }\n\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"wrapper grid-flex-v-bottom pad-t-b-1-1-2 gutter-1-2\">\n          <div className=\"xs-1 m-1-2 island-1-2\">\n            <strong className=\"logo headline-1 block\">Sushi Go!</strong>\n            <p className=\"body-2 push-0\">Based on popular table top game <a href=\"https://gamewright.com/product/Sushi-Go\" target=\"_blank\" rel=\"noopener noreferrer\">Sushi Go</a> by <a href=\"https://gamewright.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gamewright</a>.</p>\n          </div>\n          <div className=\"xs-1 m-1-2 island-1-2\">\n            <p className=\"body-2 push-0\">Designed and developed for personal use only by <a href=\"https://adamrobillard.ca\">Adam Robillard</a>.</p>\n            <p className=\"body-2 push-0\">Sushi illustrations by <a href=\"https://hannahdel.ca\">Hannah Delaney</a>.</p>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n\n}\n\nexport default Footer;","export const cards = {\n  'egg': {\n    \"title\": \"Egg\",\n    \"family\": \"nigiri\",\n    \"type\": \"nigiri\",\n    \"value\": 1,\n    \"count\": 4,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Nigiri 1\",\n    \"wasabi\": false\n  },\n  'salmon': {\n    \"title\": \"Salmon\",\n    \"family\": \"nigiri\",\n    \"type\": \"nigiri\",\n    \"value\": 2,\n    \"count\": 5,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Nigiri 2\",\n    \"wasabi\": false\n  },\n  'squid': {\n    \"title\": \"Squid\",\n    \"family\": \"nigiri\",\n    \"type\": \"nigiri\",\n    \"value\": 3,\n    \"count\": 3,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Nigiri 3\",\n    \"wasabi\": true\n  },\n  'maki-1': {\n    \"title\": \"Maki\",\n    \"family\": \"maki\",\n    \"type\": \"rolls\",\n    \"value\": 1,\n    \"count\": 4,\n    \"color\": \"red\",\n    \"scoreDescL\": 'Most: 6/4/2',\n    \"scoreDescS\": 'Most: 6/3'\n  },\n  'maki-2': {\n    \"title\": \"Maki\",\n    \"family\": \"maki\",\n    \"type\": \"rolls\",\n    \"value\": 2,\n    \"count\": 4,\n    \"color\": \"red\",\n    \"scoreDescL\": 'Most: 6/4/2',\n    \"scoreDescS\": 'Most: 6/3'\n  },\n  'maki-3': {\n    \"title\": \"Maki\",\n    \"family\": \"maki\",\n    \"type\": \"rolls\",\n    \"value\": 3,\n    \"count\": 3,\n    \"color\": \"red\",\n    \"scoreDescL\": 'Most: 6/4/2',\n    \"scoreDescS\": 'Most: 6/3'\n  },\n  'tempura': {\n    \"title\": \"Tempura\",\n    \"family\": \"tempura\",\n    \"type\": \"appetizer\",\n    \"count\": 8,\n    \"color\": \"purple\",\n    \"scoreDesc\": \"x2 = 5\"\n  },\n  'sashimi': {\n    \"title\": \"Sashimi\",\n    \"family\": \"sashimi\",\n    \"type\": \"appetizer\",\n    \"count\": 8,\n    \"color\": \"green\",\n    \"scoreDesc\": \"x3 = 10\"\n  },\n  'miso-soup': {\n    \"title\": \"Miso Soup\",\n    \"family\": \"miso-soup\",\n    \"type\": \"appetizer\",\n    \"count\": 8,\n    \"color\": \"turquoise\",\n    \"scoreDesc\": \"Discard If another is played this turn\",\n    \"cancelled\": true\n  },\n  'wasabi': {\n    \"title\": \"Wasabi\",\n    \"family\": \"wasabi\",\n    \"type\": \"special\",\n    \"count\": 3,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Next nigiri x3\"\n  },\n  'tea': {\n    \"title\": \"Tea\",\n    \"family\": \"tea\",\n    \"type\": \"special\",\n    \"count\": 3,\n    \"color\": \"burgundy\",\n    \"scoreDesc\": \"x1 per most colour\"\n  },\n  'ice-cream': {\n    \"title\": \"Ice Cream\",\n    \"family\": \"ice-cream\",\n    \"type\": \"dessert\",\n    \"count\": 15,\n    \"color\": \"light-blue\",\n    \"scoreDesc\": \"x4 = 12\"\n  },\n}\n\nexport function deck() {\n  \n  let deck = [];\n\n  Object.keys(cards).forEach(key => {\n    let i = 0;\n    while (i < cards[key].count) {\n      if (cards[key].type === 'dessert') {\n        i++;\n        continue;\n      }\n      deck.push(key)\n      i++;\n    }\n\n  })\n\n  return deck;\n}","import React from 'react';\n\nclass LobbyPlayerGrid extends React.Component {\n\n  emptyUsers = () => {\n    const addAmount = 8 - Object.keys(this.props.users).length;\n    const blanks = [];\n    let i = 0;\n\n    while (i < addAmount) {\n      blanks.push(\n        <div key={`unclaimed-${i}`} className=\"xs-1-2 s-1-3 m-1-4 l-1-3 island-1-2\">\n          <div className=\"embed-1by1 player-card no-user\">\n            <div className=\"player-card-icon\"></div>\n            <h3 className=\"player-card-name\">---</h3>\n          </div>\n        </div>\n      )\n      i++;\n    }\n    return blanks;\n  }\n\n  handleDeleteUser = (e) => {\n    this.props.deleteUser(e.currentTarget.dataset.user);\n  }\n\n  render() {\n    const users = this.props.users;\n    return (\n      <div className=\"player-card-grid grid-flex\">\n        {Object.keys(this.props.users).map(key => (\n          <div key={key} className=\"xs-1-2 s-1-3 m-1-4 l-1-3 island-1-2\">\n            <div className={`embed-1by1 player-card bg-${users[key].color}${users[key].host ? ' host' : ''}`}>\n              <div className=\"player-card-icon\"></div>\n              <h3 className=\"player-card-name\">{users[key].userName}</h3>\n              <button className=\"player-card-remove\" data-user={key} onClick={this.handleDeleteUser} aria-label=\"Delete user\">\n                <i className=\"font-alt\">X</i>\n              </button>\n            </div>\n          </div>\n        ))}\n        {this.emptyUsers()}\n      </div>\n    )\n  }\n\n}\n\nexport default LobbyPlayerGrid;","import React from 'react';\n\nclass AddUser extends React.Component {\n\n  handleAddUser = (e) => {\n    e.preventDefault();\n    const newUser = {\n      userName: e.target.userName.value,\n      color: e.target.color.value,\n      cards: {}\n    }\n    const userCount = Object.keys(this.props.users).length;\n    const users = this.props.users;\n    const userKeys = Object.keys(this.props.users);\n    const usedColors = [];\n    userKeys.forEach(key => {\n      usedColors.push(users[key].color)\n    })\n    const colorCheck = usedColors.includes(e.target.color.value)\n    if (colorCheck !== true && userCount < 8) {\n      this.props.addUser(newUser);\n    }\n  }\n\n  colorOptions = () => {\n    const colors = [\"purple\", \"green\", \"turquoise\", \"yellow\", \"cyan\", \"navy\", \"pink\", \"red\"];\n    const users = this.props.users;\n    const userKeys = Object.keys(this.props.users);\n    const usedColors = [];\n    const colorOptions = []\n    let i = 0;\n    userKeys.forEach(key => {\n      const index = colors.indexOf(users[key].color);\n      usedColors.push(users[key].color)\n      colors.splice(index, 1)\n    })\n    // available colors\n    while (i < colors.length) {\n      colorOptions.push(\n        <div key={colors[i]} className=\"color-swatch\">\n          <input\n            id={`c-${colors[i]}`}\n            type=\"radio\"\n            name=\"color\"\n            value={colors[i]}\n            defaultChecked={i === 0}\n            required\n          />\n          <label\n            className={`bg-${colors[i]}`}\n            htmlFor={`c-${colors[i]}`}\n          >\n            <span>Purple</span>\n          </label>\n        </div>\n      )\n      i++;\n    }\n    i = 0;\n    // unavailable colors\n    while (i < usedColors.length) {\n      colorOptions.push(\n        <div key={usedColors[i]} className=\"color-swatch\">\n          <input\n            id={`c-${usedColors[i]}`}\n            type=\"radio\"\n            name=\"color\"\n            value={usedColors[i]}\n            disabled={true}\n          />\n          <label\n            className={`bg-${usedColors[i]}`}\n            htmlFor={`c-${usedColors[i]}`}\n          >\n            <span>Purple</span>\n          </label>\n        </div>\n      )\n      i++;\n    }\n    return colorOptions;\n\n  }\n\n  render() {\n    const userKeys = Object.keys(this.props.users);\n    if (userKeys.length >= 8) {\n      return (\n        <form className=\"pop-up-add-user island-2\" onSubmit={this.handleAddUser}>\n          <h2>Sorry, this game is full!</h2>\n        </form>\n      )\n    } else {\n      return (\n        <form className=\"pop-up-add-user island-2\" onSubmit={this.handleAddUser}>\n          <h2>Enter your name and pick a colour!</h2>\n          <div className=\"grid-colors\">\n            {this.colorOptions()}\n          </div>\n          <div className=\"grid-flex\">\n            <input\n              name=\"userName\"\n              type=\"text\"\n              ref={this.userNameInput}\n              required\n              placeholder=\"User Name\"\n              defaultValue={this.props.localUser}\n            />\n            <button className=\"btn btn-medium btn-no-shadow\" type=\"submit\">Join</button>\n          </div>\n        </form>\n      )\n    }\n  }\n\n}\n\nexport default AddUser;","import React from 'react';\nimport LobbyPlayerGrid from './LobbyPlayerGrid';\nimport AddUser from './AddUser';\n\nclass Lobby extends React.Component {\n\n  usersDisplay = () => {\n    const users = Object.keys(this.props.users)\n    if (users.includes(this.props.localUser)) {\n      return (\n        <LobbyPlayerGrid\n          users={this.props.users}\n          deleteUser={this.props.deleteUser}\n        />\n      )\n    } else {\n      return (\n        <AddUser\n          addUser={this.props.addUser}\n          localUser={this.props.localUser}\n          users={this.props.users}\n        />\n      )\n    }\n  }\n\n  startGame = () => {\n    const localUser = this.props.localUser;\n    const users = this.props.users;\n    if (users[localUser] !== undefined) {\n      if (users[localUser].host === true) {\n        return (\n          <button className=\"btn btn-medium\" onClick={this.props.startGame}>Start Game!</button>\n        )\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper grid-flex-v-middle gutter-1-2 pad-t-1-2 pad-b-4\">\n        <div className=\"gamecode-box xs-1 l-1-2 island-1-2\">\n          <h2 className=\"text-purple shadow-t-pink-2\">Gamecode</h2>\n          <strong className=\"gamecode-large block font-alt text-pink shadow-t-purple-4\">{this.props.gamecode}</strong>\n          {this.startGame()}\n        </div>\n        <div className=\"xs-1 l-1-2 island-1-2\">\n          {this.usersDisplay()}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Lobby;","import React from 'react';\n\nclass CardSushiFull extends React.Component {\n\n  state = {\n    confirm: false,\n  }\n\n  handlePlayCard = (e) => {\n    if (!this.state.confirm) {\n      this.setState({ confirm: true })\n    }\n  }\n\n  askConfirm = () => {\n    if (this.state.confirm) {\n      return (\n        <div className=\"card-confirm\">\n          <button className=\"btn push\" onClick={this.confirmCard}>Confirm</button>\n          <button className=\"btn btn-pink\" onClick={this.cancelCard}>Cancel</button>\n        </div>\n      )\n    }\n  }\n\n  confirmCard = (e) => {\n    const card = e.currentTarget.closest('.card-sushi').dataset.card; \n    this.props.userPlayCard(card);\n    this.setState({ confirm: false })\n  }\n  \n  cancelCard = (e) => {\n    this.setState({ confirm: false })\n  }\n\n  displayMakiIcons = () => {\n    const cardData = this.props.cardData;\n    const makiIcons = []\n    let i = 0;\n    while (i < cardData.value) {\n      makiIcons.push(\n        <li key={`maki-${i + 1}`}>\n          <img className=\"maki-icon\" src=\"images/maki.svg\" alt=\"Maki\" />\n        </li>\n      )\n      i++;\n    }\n    return makiIcons;\n  }\n\n  render() {\n    const cardData = this.props.cardData;\n    const userCount = Object.keys(this.props.users).length;\n    if (cardData.family === 'maki') {\n      return (\n        <div onClick={this.props.showConfirm ? this.handlePlayCard : null} data-card={this.props.index} className={`card-sushi maki${this.props.revealed ? '' : ' not-revealed'}`}>\n          <ul className=\"card-maki-icons list-group-flex push-0\">\n            {this.displayMakiIcons()}\n          </ul>\n          <div className=\"card-image\">\n            <img src={`images/maki.svg`} alt=\"\" />\n          </div>\n          <div className=\"card-info\">\n            <h3 className=\"card-title\">{cardData.title}</h3>\n            <h4 className=\"card-score-desc\">{userCount < 6 ? cardData.scoreDescS : cardData.scoreDescL}</h4>\n          </div>\n          {this.askConfirm()}\n        </div>\n      )\n    } else {\n      return (\n        <div onClick={this.props.showConfirm ? this.handlePlayCard : null} data-card={this.props.index} className={`card-sushi${cardData.family ? ` ${cardData.family}` : ''}${this.props.wasabiApplied ? ` wasabi-applied` : ''}${this.props.cancelled ? ' miso-cancelled' : ''}${this.props.revealed ? '' : ' not-revealed'}`}>\n          <div className=\"card-image\">\n            <img src={`images/${this.props.img}.svg`} alt=\"\" />\n          </div>\n          <div className=\"card-info\">\n            <h3 className=\"card-title\">{cardData.title}</h3>\n            <h4 className=\"card-score-desc\">{cardData.scoreDesc}</h4>\n          </div>\n          {this.askConfirm()}\n        </div>\n      )\n    }\n  }\n\n}\n\nexport default CardSushiFull;","import React from 'react';\n\nclass CardSushiSm extends React.Component {\n\n\n\n  render() {\n    const cardData = this.props.cardData;\n    if (cardData.family === 'maki' || cardData.family === 'nigiri') {\n      return (\n        <div className={`card-sushi ${cardData.title === 'Wasabi' ? 'wasabi' : cardData.family}${this.props.wasabiApplied ? ' wasabi-applied' : ''}${this.props.revealed ? '' : ' not-revealed'}`}>\n          <div className=\"card-img-wrap\">\n            <span className=\"card-points\">{cardData.value}</span>\n            <img src={`images/${cardData.family === 'maki' ? 'maki' : this.props.img}.svg`} alt={cardData.title} />\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className={`card-sushi ${cardData.family}${this.props.cancelled ? ' miso-cancelled' : ''}${this.props.revealed ? '' : ' not-revealed'}`}>\n          <div className=\"card-img-wrap\">\n            <img src={`images/${this.props.img}.svg`} alt={cardData.title} />\n          </div>\n        </div>\n      )\n    }\n  }\n\n}\n\nexport default CardSushiSm;","import React from 'react';\n\nclass PointsGridItem extends React.Component {\n\n  state = {\n    score: 0\n  }\n\n  componentDidMount() {\n    let updateScore = this.state.score;\n    var scoreInterval = setInterval(() => {\n      updateScore = updateScore + 1;\n      this.setState({ score: updateScore })\n    }, 50);\n    setTimeout(() => {\n      clearInterval(scoreInterval);\n      this.setState({ score: this.props.score })\n    }, 50 * this.props.score + 50)\n  }\n\n\n  render() {\n    const userData = this.props.userData;\n    return (\n      <div className={`xs-1-2 m-1-4 island-1-2`}>\n        <div className={`points-grid-item bg-${userData.color} embed-1by1`}>\n          <div>\n            <h3 className=\"headline-4\">{userData.userName}</h3>\n            <strong>{this.state.score}</strong>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default PointsGridItem;","import React from 'react';\nimport PointsGridItem from './PointsGridItem';\n\nclass RoundEnd extends React.Component {\n\n  handleStartNextRound = () => {\n    this.props.startNewRound();\n  }\n\n  handleExitToLobby = () => {\n    this.props.exitToLobby();\n  }\n\n  handleRestart = () => {\n    this.props.exitToLobby();\n    this.props.startGame();\n  }\n\n  nextRoundBtn = () => {\n    const users = { ...this.props.users }\n    const localUser = this.props.localUser;\n    const host = users[localUser].host;\n    if (host) {\n      return (\n        <div className=\"island\">\n          {this.props.round === 3 ? <><button className=\"btn push-r\" onClick={this.handleExitToLobby}>Return to Lobby</button><button className=\"btn btn-pink\" onClick={this.handleRestart}>Restart Game</button></> : <button className=\"btn\" onClick={this.handleStartNextRound}>Start Next Round!</button>}\n        </div>\n      )\n    }\n  }\n\n  render() {\n    const users = {...this.props.users}\n    const userKeys = Object.keys(users);\n    const userAmount = userKeys.length;\n    let widthL;\n    if (userAmount === 2 || userAmount === 4 || userAmount === 7 || userAmount === 8) {\n      widthL = 4\n    } else if (userAmount === 3 || userAmount === 5 || userAmount === 6) {\n      widthL = 3;\n    }\n    return (\n      <div className=\"pop-up-round-end island\">\n        <div className=\"island\">\n          <h2 className=\"headline-1\">{this.props.round === 3 ? 'Game Over!' : `End of Round ${this.props.round}`}</h2>\n        </div>\n        <div className=\"points-grid grid-flex island-1-2\">\n          {userKeys.map(user => {\n            const userData = users[user];\n            return (\n              <PointsGridItem\n                key={`points-${user}`}\n                userData={userData}\n                widthL={widthL}\n                score={userData.score ? userData.score : '0'}\n              />\n            )\n          })}\n        </div>\n        {this.nextRoundBtn()}\n      </div>\n    )\n  }\n\n}\n\nexport default RoundEnd;","import React from 'react';\nimport { cards } from '../../cardData';\nimport CardSushiFull from './CardSushiFull';\nimport CardSushiSm from './CardSushiSm';\nimport RoundEnd from './RoundEnd';\n\nclass GameBoard extends React.Component {\n\n  state ={\n    handVisible: true,\n  }\n\n  teaRef = React.createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        if (this.props.settingsDisplayed) {\n          this.props.handleSettingsDisplay();\n        } else {\n          this.handleHandVisibility();\n        }\n      }\n    })\n  }\n\n  userPlayCard = (card) => {\n    this.props.playCard(card)\n  }\n\n  showHand = () => {\n    const localUser = this.props.localUser;\n    const users = {...this.props.users};\n    const hands = this.props.hands;\n    const handRef = users[localUser].handRef;\n    const hand = hands[handRef];\n    const handFamilies = [];\n    const handDisplay = [];\n    const handLocked = users[localUser].playedCards ? users[localUser].playedCards.ready : false;\n    let cardCount = 0;\n    if (hand) {\n      hand.forEach(key => {\n        if (!handFamilies.includes(cards[key].family)) {\n          handFamilies.push(cards[key].family)\n        }\n      })\n    }\n    let cardCounter = 1;\n    handFamilies.forEach(family => {\n      hand.forEach(card => {\n        if (cards[card].family === family) {\n          cardCount++;\n          const cardData = cards[card];\n          handDisplay.push(\n            <CardSushiFull\n              key={`card-${cardCounter}-${card}`}\n              index={card}\n              img={card}\n              cardData={cardData}\n              users={users}\n              userPlayCard={this.userPlayCard}\n              showConfirm={true}\n              revealed={true}\n            />\n          )\n          cardCounter++;\n        }\n      })\n    })\n    return (\n      <aside className={`hand bg-${this.props.users[this.props.localUser].color}-faded${this.state.handVisible ? ' open' : ''}${handLocked ? ' locked' : ''}`}>\n        <button onClick={this.handleHandVisibility} className={`hand-title bg-${this.props.users[this.props.localUser].color}`} tabIndex=\"0\">\n          <div className=\"hand-title-rotate\">\n            <h2>Your Hand</h2>\n          </div>\n          <span className=\"headline-3\">{this.state.handVisible ? 'X' : '<'}</span>\n        </button>\n        <div className={`hand-cards island hand-size-${cardCount}`}>\n          {handDisplay}\n        </div>\n      </aside>\n    )\n  }\n\n  handleHandVisibility = () => {\n    if (this.state.handVisible) {\n      this.setState({ handVisible: false })\n    } else {\n      this.setState({ handVisible: true })\n    }\n  }\n\n  myPlayedCards = () => {\n    const localUser = this.props.localUser;\n    const users = { ...this.props.users };\n    const hand = users[localUser].playedCards ? users[localUser].playedCards.cards : [];\n    const handFamilies = [];\n    const handDisplay = [];\n    if (hand) {\n      hand.forEach(card => {\n        if (!handFamilies.includes(cards[card.card].family)) {\n          if (cards[card.card].family === 'wasabi' && !handFamilies.includes('nigiri')) {\n            handFamilies.push('nigiri')\n          } else {\n            handFamilies.push(cards[card.card].family)\n          }\n        }\n      })\n    }\n    let cardCounter = 1;\n    const largestFam = {\n      family: null,\n      length: 0,\n    };\n    handFamilies.forEach(family => {\n      let makiCount = 0;\n      if (family !== 'ice-cream' && family !== 'wasabi' && family !== 'tea') {\n        const famCards = [];\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (family === 'maki' && cardData.family === 'maki') {\n            makiCount = makiCount + cardData.value;\n          }\n          if (cardData.family === family) {\n            famCards.push(\n              <CardSushiFull\n                key={`${family}-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                cancelled={card.cancelled}\n                wasabiApplied={card.wasabiApplied}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n        if (family === 'maki') {\n          famCards.push(\n            <div key={`my-maki-count`} className=\"maki-count\">\n              <span>{makiCount}</span>\n            </div>\n          )\n        }\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (cardData['family'] === 'wasabi' && family === 'nigiri') {\n            famCards.push(\n              <CardSushiFull\n                key={`${family}-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                cancelled={card.cancelled}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n        if (famCards.length > largestFam.length) {\n          largestFam.length = famCards.length;\n          largestFam.family = family;\n        }\n        handDisplay.push(\n          <div key={family} className={`sushi-family ${family}`}>\n            {famCards}\n          </div>\n        )\n      }\n    })\n    handDisplay.forEach(family => {\n      if (family.key === largestFam.family && family.key !== 'tea') {\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (cardData.family === 'tea') {\n            family.props.children.push(\n              <CardSushiFull\n                ref={this.teaRef}\n                key={`tea-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n      }\n    })\n    if (largestFam.length === 0) {\n      const teaCards = [];\n      if (hand) {\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (cardData.family === 'tea') {\n            teaCards.push(\n              <CardSushiFull\n                key={`tea-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n      }\n      handDisplay.push(\n        <div key=\"tea\" className={`sushi-family tea`}>\n          {teaCards}\n        </div>\n      )\n    }\n    return (\n      <div className=\"sushi-layout\">\n        {handDisplay}\n      </div>\n    )\n  }\n\n  displayDessert = () => {\n    const localUser = this.props.localUser;\n    const users = { ...this.props.users };\n    const hand = users[localUser].playedCards ? users[localUser].playedCards.cards : false;\n    const handDisplay = [];\n    let cardCounter = 1;\n    if (hand) {\n      hand.forEach(card => {\n        const cardData = cards[card.card];\n        if (cardData.family === 'ice-cream') {\n          handDisplay.push(\n            <CardSushiFull\n              key={`ice-cream-${cardCounter}`}\n              index={card.card}\n              img={card.card}\n              cardData={cardData}\n              users={users}\n              userPlayCard={this.userPlayCard}\n              showConfirm={false}\n              revealed={card.revealed}\n            />\n          )\n          cardCounter++;\n        }\n      })\n    }\n    return handDisplay;\n  }\n\n  displayPlayerPlayedCards = () => {\n    const localUser = this.props.localUser;\n    const users = { ...this.props.users };\n    const userKeys = Object.keys(users);\n    const userColumns = [];\n    userKeys.forEach(user => {\n      if (user !== localUser) {\n        const hand = users[user].playedCards ? users[user].playedCards.cards : false;\n        const handFamilies = [];\n        const handDisplay = [];\n        if (hand) {\n          hand.forEach(card => {\n            if (!handFamilies.includes(cards[card.card].family)) {\n              if (cards[card.card].family === 'wasabi' && !handFamilies.includes('nigiri')) {\n                handFamilies.push('nigiri')\n              } else {\n                handFamilies.push(cards[card.card].family)\n              }\n            }\n          })\n        }\n        let cardCounter = 1;\n        const largestFam = {\n          family: null,\n          length: 0,\n        };\n        handFamilies.forEach(family => {\n          let makiCount = 0;\n          if (family !== 'ice-cream' && family !== 'wasabi' && family !== 'tea') {\n            const famCards = [];\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (family === 'maki' && cardData.family === 'maki' && card.revealed === true) {\n                makiCount = makiCount + cardData.value;\n              }\n              if (cardData.family === family) {\n                famCards.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    cancelled={card.cancelled}\n                    wasabiApplied={card.wasabiApplied}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n            if (family === 'maki') {\n              if (makiCount !== 0) {\n                famCards.push(\n                  <div key={`${user}-maki-count`} className=\"maki-count\">\n                    <span>{makiCount}</span>\n                  </div>\n                )\n              }\n            }\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (cardData['family'] === 'wasabi' && family === 'nigiri') {\n                famCards.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n            if (famCards.length > largestFam.length) {\n              largestFam.length = famCards.length;\n              largestFam.family = family;\n            }\n            handDisplay.push(\n              <div key={family} className={`sushi-family ${family}`}>\n                {famCards}\n              </div>\n            )\n          }\n        })\n        handDisplay.forEach(family => {\n          if (family.key === largestFam.family && family.key !== 'tea') {\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (cardData.family === 'tea') {\n                family.props.children.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n          }\n        })\n        if (largestFam.length === 0) {\n          const teaCards = [];\n          if (hand) {\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (cardData.family === 'tea') {\n                teaCards.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n          }\n          handDisplay.push(\n            <div key=\"tea\" className={`sushi-family tea`}>\n              {teaCards}\n            </div>\n          )\n        }\n\n        cardCounter = 1;\n        const dessertDisplay = []\n        if (hand) {   \n          hand.forEach(card => {\n            const cardData = cards[card.card];\n            if (cardData.family === 'ice-cream') {\n              dessertDisplay.push(\n                <CardSushiSm\n                  key={`${user}-${card.card}-${cardCounter}`}\n                  cardData={cards[card.card]}\n                  img={card.card}\n                  revealed={card.revealed}\n                />\n              )\n              cardCounter++;\n            }\n          })\n        }   \n        const userReady = users[user].playedCards ? users[user].playedCards.ready : false;\n        userColumns.push (\n          <div key={user} className={`card-column bg-${users[user].color}-faded`}>\n            <div className={`panel-score bg-${users[user].color}${userReady ? ' ready' : ''}`}>\n              <h2>{user}:</h2>\n              <strong className=\"score\">{users[user].score ? users[user].score : 0}</strong>\n            </div>\n            <div className=\"panel-cards\">\n              {handDisplay}\n            </div>\n            <div className={`panel-dessert bg-${users[user].color === 'pink' ? 'purple' : 'pink'}`}>\n              {dessertDisplay}\n            </div>\n          </div>\n        )\n      }\n    });\n    return userColumns;\n  }\n\n  handleReady = () => {\n    const localUser = this.props.localUser;\n    this.props.setReady(localUser);\n  }\n\n  render() {\n    const localUser = this.props.localUser;\n    const users = this.props.users;\n    const ready = users[localUser].playedCards ? users[localUser].playedCards.ready : false;\n    const numOpponents = Object.keys(users).length - 1;\n    return (\n      <>\n        <div className={`card-panels wrapper gutter-1-2${ this.props.roundEnd === true ? ' opacity-1-4' : ''}`}>\n        <section className=\"local-user-cards gutter-1-2\">\n          <div className={`panel-wrap bg-${users[localUser].color}-faded`}>\n            <div className={`panel-score bg-${users[localUser].color}`}>\n              <strong className=\"score\">{this.props.users[localUser].score ? this.props.users[localUser].score : 0}</strong>\n              <button className={`btn-ready${ready ? ' ready' : ''}`} onClick={this.handleReady}>Ready{ready ? '!' : ''}</button>\n              {users[localUser].host ? <span className=\"host-badge bg-pink\">H</span> : null}\n            </div>\n            <div className=\"panel-cards\">\n              <h2>Your Sushi</h2>\n              {this.myPlayedCards()}\n            </div>\n              <div className={`panel-dessert bg-${users[localUser].color === 'pink' ? 'purple' : 'pink'}`}>\n              <h3>Dessert</h3>\n              <div className=\"dessert-cards\">\n                {this.displayDessert()}\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className={`user-cards gutter-1-2 push opponent-amount-${numOpponents}`}>\n          {this.displayPlayerPlayedCards()}\n        </section>\n      </div>\n      {this.showHand()}\n      {this.props.roundEnd === true ? <RoundEnd\n        users={this.props.users}\n        localUser={this.props.localUser}\n        newRound={this.props.newRound}\n        startNewRound={this.props.startNewRound}\n        calculateScore={this.props.calculateScore}\n        round={this.props.round}\n        exitToLobby={this.props.exitToLobby}\n        startGame={this.props.startGame}\n      /> : null}\n      </>\n    )\n  }\n\n}\n\nexport default GameBoard;","import React from 'react';\n\nclass Settings extends React.Component {\n\n  handleExitToLobby = () => {\n    this.props.exitToLobby();\n  }\n  handleRestart = () => {\n    this.props.exitToLobby();\n    this.props.startGame();\n  }\n\n  render() {\n    return (\n      <div className=\"pop-up-settings island-2\">\n        <h2 className=\"push-2\">Settings</h2>\n        <button onClick={this.props.handleSettingsDisplay} className=\"btn-x-close\">X</button>\n        <div className=\"settings-grid\">\n          <div className=\"grid-flex-v-middle grid-flex-h-split push\">\n            <h3 className=\"headline-5 push-0\">Quit current game:</h3>\n            <button className=\"btn\" onClick={this.handleExitToLobby}>Exit to Lobby</button>\n          </div>\n          <div className=\"grid-flex-v-middle grid-flex-h-split\">\n            <div>\n              <h3 className=\"headline-5 push-0\">Restart game:</h3>\n              <p className=\"push body-2\">This will start a new game with new random hands.</p>\n            </div>\n            <button className=\"btn\" onClick={this.handleRestart}>Restart Game</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Settings;","import React from 'react';\nimport base from '../base';\nimport Header from './ui-elements/Header'\nimport Footer from './ui-elements/Footer'\nimport { deck, cards } from '../cardData'\nimport Lobby from './ui-elements/Lobby';\nimport GameBoard from './ui-elements/GameBoard';\nimport Settings from './ui-elements/Settings';\n\nclass App extends React.Component {\n\n  state = {\n    deck: {},\n    users: {\n      // Adam: {\n      //   userName: \"Adam\",\n      //   color: \"purple\",\n      //   host: true\n      // },\n      // Hannah: {\n      //   userName: \"Hannah\",\n      //   color: \"green\"\n      // },\n      // Patti: {\n      //   userName: \"Patti\",\n      //   color: \"turquoise\"\n      // },\n      // Hugh: {\n      //   userName: \"Hugh\",\n      //   color: \"yellow\"\n      // },\n      // Tim: {\n      //   userName: \"Tim\",\n      //   color: \"cyan\"\n      // },\n      // Caitlin: {\n      //   userName: \"Caitlin\",\n      //   color: \"navy\"\n      // },\n      // Andrew: {\n      //   userName: \"Andrew\",\n      //   color: \"pink\"\n      // },\n      // Kyla: {\n      //   userName: \"Kyla\",\n      //   color: \"red\"\n      // },\n    },\n    localUser: '',\n    gameStart: {},\n    round: {},\n    roundEnd: false,\n    hands: {},\n    settingsDisplayed: false,\n    misoPlayed: false,\n    roundScoreCalculated: false,\n  }\n\n  componentDidMount() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.gamecode); //first reinstate localstorage\n    if (localStorageRef) {\n      const savedState = JSON.parse(localStorageRef);\n      this.setState({\n        deck: savedState.deck,\n        users: savedState.users,\n        gameStart: savedState.gameStart,\n        round: savedState.round,\n        hands: savedState.hands,\n      })\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/deck`, {\n        context: this,\n        state: 'deck'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/users`, {\n        context: this,\n        state: 'users'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/gameStart`, {\n        context: this,\n        state: 'gameStart'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/round`, {\n        context: this,\n        state: 'round'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/roundEnd`, {\n        context: this,\n        state: 'roundEnd'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/hands`, {\n        context: this,\n        state: 'hands'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/misoPlayed`, {\n        context: this,\n        state: 'misoPlayed'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/roundScoreCalculated`, {\n        context: this,\n        state: 'roundScoreCalculated'\n      });\n    } else {\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/deck`, {\n        context: this,\n        state: 'deck'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/users`, {\n        context: this,\n        state: 'users'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/gameStart`, {\n        context: this,\n        state: 'gameStart'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/round`, {\n        context: this,\n        state: 'round'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/roundEnd`, {\n        context: this,\n        state: 'roundEnd'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/hands`, {\n        context: this,\n        state: 'hands'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/misoPlayed`, {\n        context: this,\n        state: 'misoPlayed'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/roundScoreCalculated`, {\n        context: this,\n        state: 'roundScoreCalculated'\n      });\n      // console.log(this.state.gameStart)\n      // if (this.state.gameStart === {}) {\n      //   console.log('dumb gamestart')\n      // }\n    }\n    const localUser = JSON.parse(localStorage.getItem('localUser'));\n    this.setState({ localUser })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.gamecode, JSON.stringify(this.state))\n    localStorage.setItem('localUser', JSON.stringify(this.state.localUser))\n  }\n\n  addUser = (newUser) => {\n    const userAmount = Object.keys(this.state.users).length;\n    const users = {...this.state.users};\n    if (userAmount === 0) {\n      newUser.host = true;\n      users[newUser.userName] = newUser;\n      this.setState({\n        users: users,\n        localUser: newUser.userName,\n      });\n    } else {\n      users[newUser.userName] = newUser;\n      this.setState({\n        users: users,\n        localUser: newUser.userName,\n      });\n    }\n  }\n\n  deleteUser = (user) => {\n    const users = {...this.state.users};\n    if (users[user].host === true) {\n      users[user] = null;\n      const userKeys = Object.keys(users);\n      if (users[userKeys[1]] !== undefined) {\n        if (users[userKeys[0]] === null) {\n          users[userKeys[1]].host = true;\n        } else {\n          users[userKeys[0]].host = true;\n        }\n      }\n      this.setState({ users })\n    } else {\n      users[user] = null;\n      this.setState({ users })\n    }\n  }\n\n  startGame = () => {\n    const userCount = Object.keys(this.state.users).length;\n    const fullDeck = deck();\n    this.newRound(userCount, fullDeck, true);\n    this.setState({\n      gameStart: true\n     });\n  }\n\n  startNewRound = () => {\n    const userCount = Object.keys(this.state.users).length;\n    const iceCreamLayOver = [];\n    const deckReset = deck();\n    this.state.deck.forEach(card => {\n      if (card === \"ice-cream\") {\n        iceCreamLayOver.push(card);\n      }\n    })\n    const fullDeck = [\n      ...deckReset,\n      ...iceCreamLayOver\n    ];\n    console.log(iceCreamLayOver);\n    console.log(deckReset);\n    console.log(fullDeck);\n    this.newRound(userCount, fullDeck, false);\n    this.setState({ \n      roundEnd: false,\n      roundScoreCalculated: false,\n    })\n  }\n\n  newRound = (userCount, fullDeck, newGame) => {\n    const newFullDeck = [...fullDeck];\n    let i = 0;\n    let round;\n    if (newGame) {\n      round = 1;\n      this.setState({ round })\n    } else {\n      round = this.state.round + 1;\n      this.setState({ round })\n    }\n    if (round === 1) {\n      while (i < (userCount < 6 ? 5 : 7)) {\n        newFullDeck.push('ice-cream');\n        i++;\n      }\n    } else if (round === 2) {\n      while (i < (userCount < 6 ? 3 : 5)) {\n        newFullDeck.push('ice-cream');\n        i++;\n      }\n    } else if (round === 3) {\n      while (i < (userCount < 6 ? 2 : 3)) {\n        newFullDeck.push('ice-cream');\n        i++;\n      }\n    } else {\n    }\n    // this.setState({ deck: newFullDeck })\n    setTimeout(() => { this.dealCards(newFullDeck) }, 1);\n  }\n\n  dealCards = (newFullDeck) => {\n    const deck = [...newFullDeck];\n    const hands = [];\n    const userKeys = Object.keys(this.state.users);\n    const userCount = userKeys.length;\n    const users = {...this.state.users};\n    let handSize;\n    let hCounter = 0;\n    let dCounter = 0;\n    if (userCount < 4) {\n      handSize = 10;\n    } else if (userCount < 6) {\n      handSize = 9;\n    } else if (userCount < 8) {\n      handSize = 8;\n    } else {\n      handSize = 7;\n    }\n    while (hCounter < handSize) {\n      for (let h = 0; h < userCount; h++) {\n        const cardNumber = Math.floor(Math.random() * deck.length);\n        const card = deck[cardNumber]\n        if (hands[h] === undefined) {\n          hands[h] = [];\n          hands[h].push(card);\n        } else {\n          hands[h].push(card);\n        }\n        deck.splice(cardNumber, 1);\n      }\n      hCounter++;\n    }\n    while (dCounter < userCount) {\n      users[userKeys[dCounter]].handRef = dCounter;\n      if (users[userKeys[dCounter]].playedCards && users[userKeys[dCounter]].playedCards.cards.length > 1) {\n        const keepDesserts = [];\n        users[userKeys[dCounter]].playedCards.cards.forEach((card, index) => {\n          if (card.card === 'ice-cream') {\n            keepDesserts.push({card: 'ice-cream', revealed: true});\n          }\n        })\n        users[userKeys[dCounter]].playedCards = {\n          cards: [...keepDesserts],\n          ready: false,\n          wasabiWaiting: false,\n          doubleWasabiWaiting: false,\n          tripleWasabiWaiting: false,\n        }\n      } else {\n        users[userKeys[dCounter]].playedCards = {\n          cards: [],\n          ready: false,\n          wasabiWaiting: false,\n          doubleWasabiWaiting: false,\n          tripleWasabiWaiting: false,\n        }\n      }\n      dCounter++;\n    }\n    this.setState({ deck, hands, users });\n  }\n\n  playCard = (card) => {\n    const localUser = this.state.localUser;\n    const users = {...this.state.users};\n    const userKeys = Object.keys(users);\n    const hands = {...this.state.hands};\n    // Add to users played cards\n    if (!users[localUser].playedCards.cards) {\n      users[localUser].playedCards.cards = [];\n    }\n    // const playedAmount = Object.keys(users[localUser].playedCards.cards).length;\n    if ((card === 'egg' || card === 'squid' || card === 'salmon') && users[localUser].playedCards.wasabiWaiting) {\n      users[localUser].playedCards.cards.push({\n        card: card,\n        scored: false,\n        revealed: false,\n        wasabiApplied: true\n      })\n      if (users[localUser].playedCards.tripleWasabiWaiting) {\n        users[localUser].playedCards.tripleWasabiWaiting = false\n      } else if (users[localUser].playedCards.doubleWasabiWaiting) {\n        users[localUser].playedCards.doubleWasabiWaiting = false\n      } else {\n        users[localUser].playedCards.wasabiWaiting = false;\n      }\n    } else if (card === 'miso-soup') {\n      if (this.state.misoPlayed === true) {\n        userKeys.forEach(user => {\n          let length =  0;\n          let cardsCopy = [];\n          if (users[user].playedCards.cards) {\n            cardsCopy = [...users[user].playedCards.cards];\n            length = users[user].playedCards.cards.length;\n          }\n          const lastCard = cardsCopy.pop();\n          if (lastCard && lastCard.card === 'miso-soup' && users[user].playedCards.ready) {\n            users[user].playedCards.cards[length - 1].cancelled = true;\n          }\n        })\n        users[localUser].playedCards.cards.push({\n          card: card,\n          scored: false,\n          revealed: false,\n          cancelled: true,\n        })\n      } else {\n        users[localUser].playedCards.cards.push({\n          card: card,\n          scored: false,\n          revealed: false,\n          cancelled: false,\n        })\n        this.setState({ misoPlayed: true })\n      }\n    } else {\n      users[localUser].playedCards.cards.push({\n        card: card,\n        scored: false,\n        revealed: false,\n      })\n    }\n    if (card === 'wasabi') {\n      if (users[localUser].playedCards.doubleWasabiWaiting) {\n        users[localUser].playedCards.tripleWasabiWaiting = true\n      } else if (users[localUser].playedCards.wasabiWaiting) {\n        users[localUser].playedCards.doubleWasabiWaiting = true;\n      }\n      users[localUser].playedCards.wasabiWaiting = true;\n    }\n    users[localUser].playedCards.ready = true;\n    this.setState({ users })\n    let i = 0;\n    let ready = false;\n    while (i < userKeys.length) {\n      if (!users[userKeys[i]].playedCards.ready) {\n        i++\n        ready = false;\n        break;\n      }\n      ready = true;\n      i++\n    }\n    if (ready) {\n      if (hands[0].length > 1) {\n        userKeys.forEach(user => {\n          const oldHandRef = users[user].handRef;\n          const lastCardRef = users[user].playedCards.cards.length - 1;\n          const lastCardPlayed = users[user].playedCards.cards[lastCardRef].card;\n          const newHand = [\n            ...hands[oldHandRef].slice(0, hands[oldHandRef].indexOf(lastCardPlayed)),\n            ...hands[oldHandRef].slice(hands[oldHandRef].indexOf(lastCardPlayed) + 1),\n          ]\n          hands[oldHandRef] = newHand;\n        })\n      }\n      this.revealCards()\n      this.setState({\n        misoPlayed: false,\n        hands: hands\n      })\n    }\n  }\n\n  setReady = (user) => {\n    const users = {...this.state.users};\n    users[user].playedCards.ready = true;\n    this.setState({ users })\n  }\n\n  revealCards = () => {\n    const users = { ...this.state.users };\n    const userKeys = Object.keys(users);\n    const hands = [...this.state.hands]\n    userKeys.forEach(key => {\n      const cards = users[key].playedCards.cards;\n      cards.forEach(card => {\n        card.revealed = true;\n      })\n      const handRef = users[key].handRef;\n      if (handRef === userKeys.length - 1) {\n        users[key].handRef = 0;\n      } else {\n        users[key].handRef++;\n      }\n      if (hands[0].length <= 1) {\n        setTimeout(() => {\n          if (this.state.roundScoreCalculated !== true) {\n            this.calculateScore();\n          }\n          this.setState({ \n            roundEnd: true,\n            roundScoreCalculated: true\n          })\n        }, 1000)\n      } else {\n        users[key].playedCards.ready = false;\n      }\n    })\n    // rotate hands\n    this.setState({ users })\n  }\n\n  calculateScore = () => {\n    const users = { ...this.state.users }\n    const userKeys = Object.keys(users);\n    const userCount = userKeys.length;\n    const makiCompare = {};\n    const round = this.state.round;\n    userKeys.forEach(user => {\n      const userCards = users[user].playedCards.cards;\n      let score = 0;\n      let tempura = 0;\n      let sashimi = 0;\n      let makiScore = 0;\n      let teaCount = 0;\n      let desserts = 0;\n      const famCount = {};\n      if (users[user].score) {\n        score = users[user].score;\n      }\n      userCards.forEach(card => {\n        if (famCount[cards[card.card].family]) {\n          if (cards[card.card].family === 'wasabi') {\n            famCount['nigiri'] = famCount['nigiri'] + 1;\n          } else {\n            famCount[cards[card.card].family] = famCount[cards[card.card].family] + 1;\n          }\n        } else {\n          if (cards[card.card].family === 'wasabi') {\n            famCount['nigiri'] = 1;\n          } else {\n            famCount[cards[card.card].family] = 1;\n          }\n        }\n        if (!card.scored) {\n          if (cards[card.card].family === 'nigiri') {\n            if (card.wasabiApplied) {\n              score = score + (cards[card.card].value * 3);\n            } else {\n              score = score + cards[card.card].value;\n            }\n            card.scored = true;\n          } else if (cards[card.card].family === 'miso-soup' && !card.cancelled) {\n            score = score + 3;\n            card.scored = true;\n          } else if (card.card === 'tempura') {\n            tempura++;\n            card.scored = true;\n          } else if (card.card === 'sashimi') {\n            sashimi++;\n            card.scored = true;\n          } else if (cards[card.card].family === 'maki') {\n            makiScore = makiScore + cards[card.card].value;\n            card.scored = true;\n          } else if (cards[card.card].family === 'tea') {\n            teaCount = teaCount + 1;\n          } else if (round === 3 && cards[card.card].family === 'ice-cream') {\n            desserts = desserts + 1;\n            card.scored = true;\n          }\n        }\n\n      })\n      if (tempura >= 2) {\n        const tempuraScore = Math.floor(tempura / 2) * 5;\n        score = score + tempuraScore;\n      }\n      if (sashimi >= 3) {\n        const sashimiScore = Math.floor(sashimi / 3) * 10;\n        score = score + sashimiScore;\n      }\n      if (makiScore > 0) {\n        makiCompare[user] = makiScore;\n      }\n      if (teaCount > 0) {\n        const famCountOrdered = Object.entries(famCount).sort(function (a, b) {\n          const aPrice = a[1];\n          const bPrice = b[1];\n          return bPrice - aPrice;\n        });\n        score = score + (famCountOrdered[0][1] * teaCount);\n        console.log(user, teaCount)\n        console.log(user, famCountOrdered[0])\n        console.log(user, famCountOrdered[0][1] * teaCount)\n      }\n      if (desserts >= 4) {\n        const dessertScore = Math.floor(desserts / 4) * 12;\n        score = score + dessertScore;\n      }\n      users[user].score = score;\n      users[user].playedCards.cards = userCards;\n    })\n    if (Object.keys(makiCompare).length !== 0) {\n      // const numbersSorted = numbers.sort((aItem, bItem) => aItem - bItem);\n      const makiWinnerOrder = Object.entries(makiCompare).sort(function (a, b) {\n        const aPrice = a[1];\n        const bPrice = b[1];\n        return bPrice - aPrice;\n      });\n      if (userCount > 6) {\n        let firstPlace;\n        let secondPlace;\n        let thirdPlace;\n        makiWinnerOrder.forEach((winner, index) => {\n          if (index === 0) {\n            users[winner[0]].score = users[winner[0]].score + 6;\n            firstPlace = winner[1];\n          } else if (index === 1) {\n            if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else {\n              users[winner[0]].score = users[winner[0]].score + 4;\n              secondPlace = winner[1];\n            }\n          } else if (index === 2) {\n            if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else if (winner[1] === secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 4;\n            } else {\n              users[winner[0]].score = users[winner[0]].score + 2;\n              thirdPlace = winner[1];\n            }\n          } else {\n            if (!secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 4;\n              secondPlace = winner[1];\n            } else if (!thirdPlace) {\n              users[winner[0]].score = users[winner[0]].score + 2;\n              thirdPlace = winner[1];\n            } else if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else if (winner[1] === secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 4;\n            } else if (winner[1] === thirdPlace) {\n              users[winner[0]].score = users[winner[0]].score + 2;\n            }\n          }\n        }) \n      } else {\n        let firstPlace;\n        let secondPlace;\n        makiWinnerOrder.forEach((winner, index) => {\n          if (index === 0) {\n            users[winner[0]].score = users[winner[0]].score + 6;\n            firstPlace = winner[1];\n          } else if (index === 1) {\n            if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else {\n              users[winner[0]].score = users[winner[0]].score + 3;\n              secondPlace = winner[1];\n            }\n          } else {\n            if (!secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 3;\n              secondPlace = winner[1];\n            } else if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else if (winner[1] === secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 3;\n            }\n          }\n        }) \n      }\n    }\n    this.setState({ users })\n  }\n\n  subtitleDisplay = () => {\n    if (typeof this.state.gameStart === \"object\" || this.state.gameStart === false) {\n      return 'Lobby'\n    } else {\n      return `Round ${this.state.round}`\n    }\n  }\n\n  handleSettingsDisplay = () => {\n    if (this.state.settingsDisplayed) {\n      this.setState({ settingsDisplayed: false })\n    } else {\n      this.setState({ settingsDisplayed: true })\n    }\n  }\n\n  settingsDisplay = () => {\n    return (\n      <Settings\n        handleSettingsDisplay={this.handleSettingsDisplay}\n        exitToLobby={this.exitToLobby}\n        startGame={this.startGame}\n      />\n    )\n  }\n\n  exitToLobby = () => {\n    const users = {...this.state.users}\n    const userKeys = Object.keys(users);\n\n    userKeys.forEach(user => {\n      users[user].playedCards = null;\n      users[user].handRef = null;\n      users[user].score = null;\n    })\n    this.setState({\n      gameStart: false,\n      round: null,\n      hands: null,\n      deck: null,\n      misoPlayed: false,\n      users: users,\n      roundScoreCalculated: false,\n      roundEnd: false,\n    })\n    this.setState({ settingsDisplayed: false })\n  }\n\n  gameBoardDisplay = () => {\n    const gamecode = this.props.match.params.gamecode;\n    const users = Object.keys(this.state.users);\n    const localUser = this.state.localUser;\n    if (this.state.gameStart === true && users.includes(localUser)) {\n      const userCount = Object.keys(this.state.users).length;\n      return (\n        <GameBoard\n          users={this.state.users}\n          localUser={this.state.localUser}\n          deck={this.state.deck}\n          hands={this.state.hands}\n          userCount={userCount}\n          playCard={this.playCard}\n          settingsDisplayed={this.state.settingsDisplayed}\n          handleSettingsDisplay={this.handleSettingsDisplay}\n          roundEnd={this.state.roundEnd}\n          newRound={this.newRound}\n          startNewRound={this.startNewRound}\n          calculateScore={this.calculateScore}\n          round={this.state.round}\n          exitToLobby={this.exitToLobby}\n          setReady={this.setReady}\n          startGame={this.startGame}\n        />\n      )\n    } else {\n      return (\n        <Lobby\n          gamecode={gamecode}\n          users={this.state.users}\n          addUser={this.addUser}\n          deleteUser={this.deleteUser}\n          localUser={this.state.localUser}\n          startGame={this.startGame}\n        />\n      )\n    }\n  }\n\n  render() {\n    const gamecode = this.props.match.params.gamecode;\n    const localUser = this.state.localUser;\n    const users = {...this.state.users};\n    const host = users[localUser] ? users[localUser].host : false; \n    return (\n      <>\n        <Header\n          subtitle={this.subtitleDisplay()}\n          gamecode={gamecode}\n          host={host}\n          handleSettingsDisplay={this.handleSettingsDisplay}\n          gameStart={this.state.gameStart}\n        />\n        <main id=\"main\" role=\"main\" className={`flex pad-t-6${this.state.settingsDisplayed ? ' opacity-1-4' : ''}`}>\n          {this.gameBoardDisplay()}\n        </main>\n        {this.state.settingsDisplayed && this.settingsDisplay()}\n        <Footer />\n      </>\n    )\n  }\n\n}\n\nexport default App;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n\n// export function gameCode() {\n//   return slugify(`${rando(wordlist)}-${rando(wordlist)}-${rando(wordlist)}`);\n// }\n\nexport function gameCode() {\n  const letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  const firstLetter = letters[Math.floor(Math.random() * letters.length)];\n  const secondLetter = letters[Math.floor(Math.random() * letters.length)];\n  const thirdLetter = letters[Math.floor(Math.random() * letters.length)];\n  return firstLetter + Math.floor(Math.random() * 10) + secondLetter + Math.floor(Math.random() * 10) + thirdLetter;\n}","import React from 'react';\nimport Header from '../ui-elements/Header'\nimport Footer from '../ui-elements/Footer'\nimport { slugify, gameCode } from '../../helpers'\n\nclass Join extends React.Component {\n  gcInput = React.createRef();\n  joinGame = (e) => {\n    // stop form from submiting\n    e.preventDefault();\n    // get gamecode from input\n    const gamecode = this.gcInput.current.value;\n    //change page to the gamecode\n    this.props.history.push(`/${slugify(gamecode)}`);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <main id=\"main\" role=\"main\" className=\"flex-children-center pad-t-b-8 gutter\">\n          <form className=\"pop-up-join-game island-2\" onSubmit={this.joinGame}>\n            <h2>Join or host a game!</h2>\n            <p>To start a new game, simply enter your name and a new unique <strong>Gamecode</strong> in the form below and hit <em>Start Playing</em>! If you wish to join a game someone else created, enter your name and their <strong>Gamecode</strong> and hit <em>Start Playing</em>!</p>\n            <div className=\"grid-flex\">\n              <input\n                className=\"xs-1-2\"\n                type=\"text\"\n                ref={this.gcInput}\n                required\n                placeholder=\"Enter Gamecode\"\n                defaultValue={gameCode()}\n              />\n              <button className=\"btn btn-medium btn-no-shadow xs-1-2\" type=\"submit\">Start Playing!</button>\n            </div>\n          </form>\n        </main>\n        <Footer />\n      </>\n    )\n  }\n\n}\n\nexport default Join;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport Join from './pages/Join';\n\nclass Router extends React.Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n          <Switch>\n            <Route exact path='/' component={Join} />\n            <Route path='/:gamecode' component={App} />\n          </Switch>\n      </BrowserRouter>\n    )\n  }\n\n}\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router.js';\n\nrender(<Router />, document.querySelector('#react-loader'));"],"sourceRoot":""}