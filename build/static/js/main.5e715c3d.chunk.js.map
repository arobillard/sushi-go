{"version":3,"sources":["base.js","components/ui-elements/Header.js","components/ui-elements/Footer.js","cardData.js","components/ui-elements/LobbyPlayerGrid.js","components/ui-elements/AddUser.js","components/ui-elements/Lobby.js","components/ui-elements/CardSushiFull.js","components/ui-elements/CardSushiSm.js","components/ui-elements/PointsGridItem.js","components/ui-elements/RoundEnd.js","components/ui-elements/GameBoard.js","components/ui-elements/Settings.js","components/App.js","helpers.js","components/pages/Join.js","components/Router.js","index.js"],"names":["firebaseApp","firebase","initializeApp","apiKey","authDomain","databaseURL","base","Rebase","createClass","database","Header","displayTitle","undefined","props","subtitle","to","className","displaySubtitle","handleSettings","handleSettingsDisplay","displayGamecode","gamecode","host","gameStart","onClick","this","React","Component","Footer","href","target","rel","cards","deck","Object","keys","map","key","i","count","type","push","LobbyPlayerGrid","emptyUsers","addAmount","users","length","blanks","handleDeleteUser","e","deleteUser","currentTarget","dataset","user","color","userName","data-user","aria-label","AddUser","handleAddUser","preventDefault","newUser","value","userCount","userKeys","usedColors","forEach","includes","addUser","colorOptions","colors","index","indexOf","splice","id","name","defaultChecked","required","htmlFor","disabled","onSubmit","ref","userNameInput","placeholder","defaultValue","localUser","Lobby","usersDisplay","startGame","CardSushiFull","state","confirm","handlePlayCard","setState","askConfirm","confirmCard","cancelCard","card","closest","userPlayCard","displayMakiIcons","cardData","makiIcons","src","alt","family","showConfirm","data-card","revealed","title","scoreDescS","scoreDescL","wasabiApplied","cancelled","img","scoreDesc","CardSushiSm","PointsGridItem","score","updateScore","scoreInterval","setInterval","setTimeout","clearInterval","userData","RoundEnd","handleStartNextRound","startNewRound","handleExitToLobby","exitToLobby","widthL","round","GameBoard","handVisible","teaRef","createRef","playCard","showHand","hand","hands","handRef","handFamilies","handDisplay","handLocked","playedCards","ready","cardCounter","handleHandVisibility","tabIndex","myPlayedCards","largestFam","makiCount","famCards","children","teaCards","displayDessert","displayPlayerPlayedCards","userColumns","dessertDisplay","window","addEventListener","settingsDisplayed","roundEnd","newRound","calculateScore","Settings","handleRestart","App","misoPlayed","roundScoreCalculated","userAmount","fullDeck","iceCreamLayOver","deckReset","console","log","newGame","newFullDeck","dealCards","handSize","hCounter","dCounter","h","cardNumber","Math","floor","random","keepDesserts","wasabiWaiting","cardsCopy","lastCard","pop","scored","newHand","slice","revealCards","makiCompare","userCards","tempura","sashimi","makiScore","teaPlayed","desserts","famCount","tempuraScore","sashimiScore","famCountOrdered","entries","sort","a","b","aPrice","dessertScore","firstPlace","secondPlace","thirdPlace","makiWinnerOrder","winner","subtitleDisplay","settingsDisplay","gameBoardDisplay","match","params","localStorageRef","localStorage","getItem","savedState","JSON","parse","syncState","context","setItem","stringify","role","slugify","text","toString","toLowerCase","replace","gameCode","letters","firstLetter","secondLetter","thirdLetter","Join","gcInput","joinGame","current","history","Router","exact","path","component","render","document","querySelector"],"mappings":"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","file":"static/js/main.5e715c3d.chunk.js","sourcesContent":["import Rebase from 're-base';\nimport firebase from 'firebase';\n\nconst firebaseApp = firebase.initializeApp({\n  apiKey: \"AIzaSyDNF0tW0P_WQmbTug2hN7zG97MDKpKDVvQ\",\n  authDomain: \"arobillard-games.firebaseapp.com\",\n  databaseURL: \"https://arobillard-games.firebaseio.com\",\n});\n\nconst base = Rebase.createClass(firebaseApp.database());\n\n// Named export\nexport { firebaseApp };\n\nexport default base;","import React from 'react';\nimport { Link } from 'react-router-dom';\n\nclass Header extends React.Component {\n\n  displayTitle = () => {\n    if (this.props.subtitle === undefined) {\n      return (\n        <Link to=\"/\">\n          <h1 className=\"logo\">Sushi Go!</h1>\n        </Link>\n      )\n    } else {\n      return (\n        <Link to=\"/\">\n          <strong className=\"logo\">Sushi Go!</strong>\n        </Link>\n      )\n    }\n  }\n\n  displaySubtitle = () => {\n    if (this.props.subtitle !== undefined) {\n      return (\n          <h1 className=\"subtitle gutter-2 push-0 spread-right\">{this.props.subtitle}</h1>\n      )\n    }\n  }\n\n  handleSettings = () => {\n    this.props.handleSettingsDisplay()\n  }\n\n  displayGamecode = () => {\n    if (this.props.gamecode !== undefined) {\n      if (this.props.host && this.props.gameStart) {\n        return (\n          <div className=\"game-info-wrap pad-t-1-2 pad-b-1-2\">\n            <button onClick={this.handleSettings} className=\"push-r-2\">Settings</button>\n            <p className=\"push-0\">Gamecode: <span className=\"gamecode push-l\">{this.props.gamecode}</span></p>\n          </div>\n        )\n      }\n      return (\n        <div className=\"game-info-wrap pad-t-1-2 pad-b-1-2\">\n          <p className=\"push-0\">Gamecode: <span className=\"gamecode push-l\">{this.props.gamecode}</span></p>\n        </div>\n      )\n    }\n  }\n\n  render() {\n    return (\n      <header className='masthead'>\n        <div className=\"wrapper gutter\">\n          {this.displayTitle()}\n          {this.displaySubtitle()}\n          {this.displayGamecode()}\n        </div>\n      </header>\n    )\n  }\n\n}\n\nexport default Header;","import React from 'react';\n\nclass Footer extends React.Component {\n\n  render() {\n    return (\n      <footer className=\"footer\">\n        <div className=\"wrapper grid-flex-v-bottom pad-t-b-1-1-2 gutter-1-2\">\n          <div className=\"xs-1 m-1-2 island-1-2\">\n            <strong className=\"logo headline-1 block\">Sushi Go!</strong>\n            <p className=\"body-2 push-0\">Based on popular table top game <a href=\"https://gamewright.com/product/Sushi-Go\" target=\"_blank\" rel=\"noopener noreferrer\">Sushi Go</a> by <a href=\"https://gamewright.com/\" target=\"_blank\" rel=\"noopener noreferrer\">Gamewright</a>.</p>\n          </div>\n          <div className=\"xs-1 m-1-2 island-1-2\">\n            <p className=\"body-2 push-0\">Designed and developed for personal use only by <a href=\"https://adamrobillard.ca\">Adam Robillard</a>.</p>\n            <p className=\"body-2 push-0\">Sushi illustrations by <a href=\"https://hannahdel.ca\">Hannah Delaney</a>.</p>\n          </div>\n        </div>\n      </footer>\n    )\n  }\n\n}\n\nexport default Footer;","export const cards = {\n  'egg': {\n    \"title\": \"Egg\",\n    \"family\": \"nigiri\",\n    \"type\": \"nigiri\",\n    \"value\": 1,\n    \"count\": 4,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Nigiri 1\",\n    \"wasabi\": false\n  },\n  'salmon': {\n    \"title\": \"Salmon\",\n    \"family\": \"nigiri\",\n    \"type\": \"nigiri\",\n    \"value\": 2,\n    \"count\": 5,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Nigiri 2\",\n    \"wasabi\": false\n  },\n  'squid': {\n    \"title\": \"Squid\",\n    \"family\": \"nigiri\",\n    \"type\": \"nigiri\",\n    \"value\": 3,\n    \"count\": 3,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Nigiri 3\",\n    \"wasabi\": true\n  },\n  'maki-1': {\n    \"title\": \"Maki\",\n    \"family\": \"maki\",\n    \"type\": \"rolls\",\n    \"value\": 1,\n    \"count\": 4,\n    \"color\": \"red\",\n    \"scoreDescL\": 'Most: 6/4/2',\n    \"scoreDescS\": 'Most: 6/3'\n  },\n  'maki-2': {\n    \"title\": \"Maki\",\n    \"family\": \"maki\",\n    \"type\": \"rolls\",\n    \"value\": 2,\n    \"count\": 4,\n    \"color\": \"red\",\n    \"scoreDescL\": 'Most: 6/4/2',\n    \"scoreDescS\": 'Most: 6/3'\n  },\n  'maki-3': {\n    \"title\": \"Maki\",\n    \"family\": \"maki\",\n    \"type\": \"rolls\",\n    \"value\": 3,\n    \"count\": 3,\n    \"color\": \"red\",\n    \"scoreDescL\": 'Most: 6/4/2',\n    \"scoreDescS\": 'Most: 6/3'\n  },\n  'tempura': {\n    \"title\": \"Tempura\",\n    \"family\": \"tempura\",\n    \"type\": \"appetizer\",\n    \"count\": 8,\n    \"color\": \"purple\",\n    \"scoreDesc\": \"x2 = 5\"\n  },\n  'sashimi': {\n    \"title\": \"Sashimi\",\n    \"family\": \"sashimi\",\n    \"type\": \"appetizer\",\n    \"count\": 8,\n    \"color\": \"green\",\n    \"scoreDesc\": \"x3 = 10\"\n  },\n  'miso-soup': {\n    \"title\": \"Miso Soup\",\n    \"family\": \"miso-soup\",\n    \"type\": \"appetizer\",\n    \"count\": 8,\n    \"color\": \"turquoise\",\n    \"scoreDesc\": \"Discard If another is played this turn\",\n    \"cancelled\": true\n  },\n  'wasabi': {\n    \"title\": \"Wasabi\",\n    \"family\": \"wasabi\",\n    \"type\": \"special\",\n    \"count\": 3,\n    \"color\": \"yellow\",\n    \"scoreDesc\": \"Next nigiri x3\"\n  },\n  'tea': {\n    \"title\": \"Tea\",\n    \"family\": \"tea\",\n    \"type\": \"special\",\n    \"count\": 3,\n    \"color\": \"burgundy\",\n    \"scoreDesc\": \"x1 per most colour\"\n  },\n  'ice-cream': {\n    \"title\": \"Ice Cream\",\n    \"family\": \"ice-cream\",\n    \"type\": \"dessert\",\n    \"count\": 15,\n    \"color\": \"light-blue\",\n    \"scoreDesc\": \"x4 = 12\"\n  },\n}\n\nexport function deck() {\n  \n  let deck = [];\n\n  Object.keys(cards).map(key => {\n    let i = 0;\n    while (i < cards[key].count) {\n      if (cards[key].type === 'dessert') {\n        i++;\n        continue;\n      }\n      deck.push(key)\n      i++;\n    }\n\n  })\n\n  return deck;\n}","import React from 'react';\n\nclass LobbyPlayerGrid extends React.Component {\n\n  emptyUsers = () => {\n    const addAmount = 8 - Object.keys(this.props.users).length;\n    const blanks = [];\n    let i = 0;\n\n    while (i < addAmount) {\n      blanks.push(\n        <div key={`unclaimed-${i}`} className=\"xs-1-2 m-1-3 island-1-2\">\n          <div className=\"embed-1by1 player-card no-user\">\n            <div className=\"player-card-icon\"></div>\n            <h3 className=\"player-card-name\">---</h3>\n          </div>\n        </div>\n      )\n      i++;\n    }\n    return blanks;\n  }\n\n  handleDeleteUser = (e) => {\n    this.props.deleteUser(e.currentTarget.dataset.user);\n  }\n\n  render() {\n    const users = this.props.users;\n    return (\n      <div className=\"player-card-grid grid-flex\">\n        {Object.keys(this.props.users).map(key => (\n          <div key={key} className=\"xs-1-2 m-1-3 island-1-2\">\n            <div className={`embed-1by1 player-card bg-${users[key].color}${users[key].host ? ' host' : ''}`}>\n              <div className=\"player-card-icon\"></div>\n              <h3 className=\"player-card-name\">{users[key].userName}</h3>\n              <button className=\"player-card-remove\" data-user={key} onClick={this.handleDeleteUser} aria-label=\"Delete user\">\n                <i className=\"font-alt\">X</i>\n              </button>\n            </div>\n          </div>\n        ))}\n        {this.emptyUsers()}\n      </div>\n    )\n  }\n\n}\n\nexport default LobbyPlayerGrid;","import React from 'react';\n\nclass AddUser extends React.Component {\n\n  handleAddUser = (e) => {\n    e.preventDefault();\n    const newUser = {\n      userName: e.target.userName.value,\n      color: e.target.color.value,\n      cards: {}\n    }\n    const userCount = Object.keys(this.props.users).length;\n    const users = this.props.users;\n    const userKeys = Object.keys(this.props.users);\n    const usedColors = [];\n    userKeys.forEach(key => {\n      usedColors.push(users[key].color)\n    })\n    const colorCheck = usedColors.includes(e.target.color.value)\n    if (colorCheck !== true && userCount < 8) {\n      this.props.addUser(newUser);\n    }\n  }\n\n  colorOptions = () => {\n    const colors = [\"purple\", \"green\", \"turquoise\", \"yellow\", \"cyan\", \"navy\", \"pink\", \"red\"];\n    const users = this.props.users;\n    const userKeys = Object.keys(this.props.users);\n    const usedColors = [];\n    const colorOptions = []\n    let i = 0;\n    userKeys.forEach(key => {\n      const index = colors.indexOf(users[key].color);\n      usedColors.push(users[key].color)\n      colors.splice(index, 1)\n    })\n    // available colors\n    while (i < colors.length) {\n      colorOptions.push(\n        <div key={colors[i]} className=\"color-swatch\">\n          <input\n            id={`c-${colors[i]}`}\n            type=\"radio\"\n            name=\"color\"\n            value={colors[i]}\n            defaultChecked={i === 0}\n            required\n          />\n          <label\n            className={`bg-${colors[i]}`}\n            htmlFor={`c-${colors[i]}`}\n          >\n            <span>Purple</span>\n          </label>\n        </div>\n      )\n      i++;\n    }\n    i = 0;\n    // unavailable colors\n    while (i < usedColors.length) {\n      colorOptions.push(\n        <div key={usedColors[i]} className=\"color-swatch\">\n          <input\n            id={`c-${usedColors[i]}`}\n            type=\"radio\"\n            name=\"color\"\n            value={usedColors[i]}\n            disabled={true}\n          />\n          <label\n            className={`bg-${usedColors[i]}`}\n            htmlFor={`c-${usedColors[i]}`}\n          >\n            <span>Purple</span>\n          </label>\n        </div>\n      )\n      i++;\n    }\n    return colorOptions;\n\n  }\n\n  render() {\n    const userKeys = Object.keys(this.props.users);\n    if (userKeys.length >= 8) {\n      return (\n        <form className=\"pop-up-add-user island-2\" onSubmit={this.handleAddUser}>\n          <h2>Sorry, this game is full!</h2>\n        </form>\n      )\n    } else {\n      return (\n        <form className=\"pop-up-add-user island-2\" onSubmit={this.handleAddUser}>\n          <h2>Enter your name and pick a colour!</h2>\n          <div className=\"grid-colors\">\n            {this.colorOptions()}\n          </div>\n          <div className=\"grid-flex\">\n            <input\n              name=\"userName\"\n              type=\"text\"\n              ref={this.userNameInput}\n              required\n              placeholder=\"User Name\"\n              defaultValue={this.props.localUser}\n            />\n            <button className=\"btn btn-medium btn-no-shadow\" type=\"submit\">Join</button>\n          </div>\n        </form>\n      )\n    }\n  }\n\n}\n\nexport default AddUser;","import React from 'react';\nimport LobbyPlayerGrid from './LobbyPlayerGrid';\nimport AddUser from './AddUser';\n\nclass Lobby extends React.Component {\n\n  usersDisplay = () => {\n    const users = Object.keys(this.props.users)\n    if (users.includes(this.props.localUser)) {\n      return (\n        <LobbyPlayerGrid\n          users={this.props.users}\n          deleteUser={this.props.deleteUser}\n        />\n      )\n    } else {\n      return (\n        <AddUser\n          addUser={this.props.addUser}\n          localUser={this.props.localUser}\n          users={this.props.users}\n        />\n      )\n    }\n  }\n\n  startGame = () => {\n    const localUser = this.props.localUser;\n    const users = this.props.users;\n    if (users[localUser] !== undefined) {\n      if (users[localUser].host === true) {\n        return (\n          <button className=\"btn btn-medium\" onClick={this.props.startGame}>Start Game!</button>\n        )\n      }\n    }\n  }\n\n  render() {\n    return (\n      <div className=\"wrapper grid-flex-v-middle gutter-1-2 pad-t-1-2 pad-b-4\">\n        <div className=\"xs-1 m-1-2 island-1-2\">\n          <h2 className=\"text-purple shadow-t-pink-2\">Gamecode</h2>\n          <strong className=\"gamecode-large block font-alt text-pink shadow-t-purple-4\">{this.props.gamecode}</strong>\n          {this.startGame()}\n        </div>\n        <div className=\"xs-1 m-1-2\">\n          {this.usersDisplay()}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Lobby;","import React from 'react';\n\nclass CardSushiFull extends React.Component {\n\n  state = {\n    confirm: false,\n  }\n\n  handlePlayCard = (e) => {\n    if (!this.state.confirm) {\n      this.setState({ confirm: true })\n    }\n  }\n\n  askConfirm = () => {\n    if (this.state.confirm) {\n      return (\n        <div className=\"card-confirm\">\n          <button className=\"btn push\" onClick={this.confirmCard}>Confirm</button>\n          <button className=\"btn btn-pink\" onClick={this.cancelCard}>Cancel</button>\n        </div>\n      )\n    }\n  }\n\n  confirmCard = (e) => {\n    const card = e.currentTarget.closest('.card-sushi').dataset.card; \n    this.props.userPlayCard(card);\n    this.setState({ confirm: false })\n  }\n  \n  cancelCard = (e) => {\n    this.setState({ confirm: false })\n  }\n\n  displayMakiIcons = () => {\n    const cardData = this.props.cardData;\n    const makiIcons = []\n    let i = 0;\n    while (i < cardData.value) {\n      makiIcons.push(\n        <li key={`maki-${i + 1}`}>\n          <img className=\"maki-icon\" src=\"images/maki.svg\" alt=\"Maki\" />\n        </li>\n      )\n      i++;\n    }\n    return makiIcons;\n  }\n\n  render() {\n    const cardData = this.props.cardData;\n    const userCount = Object.keys(this.props.users).length;\n    if (cardData.family === 'maki') {\n      return (\n        <div onClick={this.props.showConfirm ? this.handlePlayCard : null} data-card={this.props.index} className={`card-sushi maki${this.props.revealed ? '' : ' not-revealed'}`}>\n          <ul className=\"card-maki-icons list-group-flex push-0\">\n            {this.displayMakiIcons()}\n          </ul>\n          <div className=\"card-image\">\n            <img src={`images/maki.svg`} alt=\"\" />\n          </div>\n          <div className=\"card-info\">\n            <h3 className=\"card-title\">{cardData.title}</h3>\n            <h4 className=\"card-score-desc\">{userCount < 6 ? cardData.scoreDescS : cardData.scoreDescL}</h4>\n          </div>\n          {this.askConfirm()}\n        </div>\n      )\n    } else {\n      return (\n        <div onClick={this.props.showConfirm ? this.handlePlayCard : null} data-card={this.props.index} className={`card-sushi${cardData.family ? ` ${cardData.family}` : ''}${this.props.wasabiApplied ? ` wasabi-applied` : ''}${this.props.cancelled ? ' miso-cancelled' : ''}${this.props.revealed ? '' : ' not-revealed'}`}>\n          <div className=\"card-image\">\n            <img src={`images/${this.props.img}.svg`} alt=\"\" />\n          </div>\n          <div className=\"card-info\">\n            <h3 className=\"card-title\">{cardData.title}</h3>\n            <h4 className=\"card-score-desc\">{cardData.scoreDesc}</h4>\n          </div>\n          {this.askConfirm()}\n        </div>\n      )\n    }\n  }\n\n}\n\nexport default CardSushiFull;","import React from 'react';\n\nclass CardSushiSm extends React.Component {\n\n\n\n  render() {\n    const cardData = this.props.cardData;\n    if (cardData.family === 'maki' || cardData.family === 'nigiri') {\n      return (\n        <div className={`card-sushi ${cardData.title === 'Wasabi' ? 'wasabi' : cardData.family}${this.props.wasabiApplied ? ' wasabi-applied' : ''}${this.props.revealed ? '' : ' not-revealed'}`}>\n          <div className=\"card-img-wrap\">\n            <span className=\"card-points\">{cardData.value}</span>\n            <img src={`images/${cardData.family === 'maki' ? 'maki' : this.props.img}.svg`} alt={cardData.title} />\n          </div>\n        </div>\n      )\n    } else {\n      return (\n        <div className={`card-sushi ${cardData.family}${this.props.cancelled ? ' miso-cancelled' : ''}${this.props.revealed ? '' : ' not-revealed'}`}>\n          <div className=\"card-img-wrap\">\n            <img src={`images/${this.props.img}.svg`} alt={cardData.title} />\n          </div>\n        </div>\n      )\n    }\n  }\n\n}\n\nexport default CardSushiSm;","import React from 'react';\n\nclass PointsGridItem extends React.Component {\n\n  state = {\n    score: 0\n  }\n\n  componentDidMount() {\n    let updateScore = this.state.score;\n    const scoreInterval = setInterval(() => {\n      updateScore = updateScore + 1;\n      this.setState({ score: updateScore })\n    }, 50);\n    setTimeout(() => {\n      clearInterval(scoreInterval);\n    }, 50 * this.props.score + 1)\n  }\n\n  render() {\n    const userData = this.props.userData;\n    return (\n      <div className={`xs-1-2 m-1-4 island-1-2`}>\n        <div className={`points-grid-item bg-${userData.color} embed-1by1`}>\n          <div>\n            <h3 className=\"headline-4\">{userData.userName}</h3>\n            <strong>{this.state.score}</strong>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default PointsGridItem;","import React from 'react';\nimport { cards } from '../../cardData'\nimport PointsGridItem from './PointsGridItem';\n\nclass RoundEnd extends React.Component {\n\n  componentDidMount() {\n    const users = {...this.props.users}\n    const localUser = this.props.localUser;\n  }\n\n  handleStartNextRound = () => {\n    this.props.startNewRound();\n  }\n\n  handleExitToLobby = () => {\n    this.props.exitToLobby();\n  }\n\n  render() {\n    const users = {...this.props.users}\n    const userKeys = Object.keys(users);\n    const userAmount = userKeys.length;\n    const widthL = userKeys.length / 2;\n    return (\n      <div className=\"pop-up-round-end island\">\n        <div className=\"island\">\n          <h2 className=\"headline-1\">{this.props.round === 3 ? 'Game Over!' : `End of Round ${this.props.round}`}</h2>\n        </div>\n        <div className=\"points-grid grid-flex island-1-2\">\n          {userKeys.map(user => {\n            const userData = users[user];\n            return (\n              <PointsGridItem\n                key={`points-${user}`}\n                userData={userData}\n                widthL={widthL}\n                score={userData.score ? userData.score : '0'}\n              />\n            )\n          })}\n        </div>\n        <div className=\"island\">\n          {this.props.round === 3 ? <button className=\"btn\" onClick={this.handleExitToLobby}>Return to Lobby</button> : <button className=\"btn\" onClick={this.handleStartNextRound}>Start Next Round!</button>}\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default RoundEnd;","import React from 'react';\nimport { cards } from '../../cardData';\nimport CardSushiFull from './CardSushiFull';\nimport CardSushiSm from './CardSushiSm';\nimport RoundEnd from './RoundEnd';\n\nclass GameBoard extends React.Component {\n\n  state ={\n    handVisible: true,\n  }\n\n  teaRef = React.createRef();\n\n  componentDidMount() {\n    window.addEventListener('keydown', (e) => {\n      if (e.key === 'Escape') {\n        if (this.props.settingsDisplayed) {\n          this.props.handleSettingsDisplay();\n        } else {\n          this.handleHandVisibility();\n        }\n      }\n    })\n  }\n\n  userPlayCard = (card) => {\n    this.props.playCard(card)\n  }\n\n  showHand = () => {\n    const localUser = this.props.localUser;\n    const users = {...this.props.users};\n    const hands = this.props.hands;\n    const handRef = users[localUser].handRef;\n    const hand = hands[handRef];\n    const handFamilies = [];\n    const handDisplay = [];\n    const handLocked = users[localUser].playedCards ? users[localUser].playedCards.ready : false;\n    if (hand) {\n      hand.forEach(key => {\n        if (!handFamilies.includes(cards[key].family)) {\n          handFamilies.push(cards[key].family)\n        }\n      })\n    }\n    let cardCounter = 1;\n    handFamilies.forEach(family => {\n      hand.forEach(card => {\n        if (cards[card].family === family) {\n          const cardData = cards[card];\n          handDisplay.push(\n            <CardSushiFull\n              key={`card-${cardCounter}-${card}`}\n              index={card}\n              img={card}\n              cardData={cardData}\n              users={users}\n              userPlayCard={this.userPlayCard}\n              showConfirm={true}\n              revealed={true}\n            />\n          )\n          cardCounter++;\n        }\n      })\n    })\n    return (\n      <aside className={`hand bg-${this.props.users[this.props.localUser].color}-faded${this.state.handVisible ? ' open' : ''}${handLocked ? ' locked' : ''}`}>\n        <button onClick={this.handleHandVisibility} className={`hand-title bg-${this.props.users[this.props.localUser].color}`} tabIndex=\"0\">\n          <div className=\"hand-title-rotate\">\n            <h2>Your Hand</h2>\n          </div>\n          <span className=\"headline-3\">{this.state.handVisible ? 'X' : '<'}</span>\n        </button>\n        <div className=\"hand-cards island\">\n          {handDisplay}\n        </div>\n      </aside>\n    )\n  }\n\n  handleHandVisibility = () => {\n    if (this.state.handVisible) {\n      this.setState({ handVisible: false })\n    } else {\n      this.setState({ handVisible: true })\n    }\n  }\n\n  myPlayedCards = () => {\n    const localUser = this.props.localUser;\n    const users = { ...this.props.users };\n    const hand = users[localUser].playedCards ? users[localUser].playedCards.cards : [];\n    const handFamilies = [];\n    const handDisplay = [];\n    if (hand) {\n      hand.forEach(card => {\n        if (!handFamilies.includes(cards[card.card].family)) {\n          if (cards[card.card].family === 'wasabi' && !handFamilies.includes('nigiri')) {\n            handFamilies.push('nigiri')\n          } else {\n            handFamilies.push(cards[card.card].family)\n          }\n        }\n      })\n    }\n    let cardCounter = 1;\n    const largestFam = {\n      family: null,\n      length: 0,\n    };\n    handFamilies.forEach(family => {\n      let makiCount = 0;\n      if (family !== 'ice-cream' && family !== 'wasabi' && family !== 'tea') {\n        const famCards = [];\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (family === 'maki' && cardData.family === 'maki') {\n            makiCount = makiCount + cardData.value;\n          }\n          if (cardData.family === family) {\n            famCards.push(\n              <CardSushiFull\n                key={`${family}-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                cancelled={card.cancelled}\n                wasabiApplied={card.wasabiApplied}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n        if (family === 'maki') {\n          famCards.push(\n            <div key={`my-maki-count`} className=\"maki-count\">\n              <span>{makiCount}</span>\n            </div>\n          )\n        }\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (cardData['family'] === 'wasabi' && family === 'nigiri') {\n            famCards.push(\n              <CardSushiFull\n                key={`${family}-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                cancelled={card.cancelled}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n        if (famCards.length > largestFam.length) {\n          largestFam.length = famCards.length;\n          largestFam.family = family;\n        }\n        handDisplay.push(\n          <div key={family} className={`sushi-family ${family}`}>\n            {famCards}\n          </div>\n        )\n      }\n    })\n    handDisplay.forEach(family => {\n      if (family.key === largestFam.family && family.key !== 'tea') {\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (cardData.family === 'tea') {\n            family.props.children.push(\n              <CardSushiFull\n                ref={this.teaRef}\n                key={`tea-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n      }\n    })\n    if (largestFam.length === 0) {\n      const teaCards = [];\n      if (hand) {\n        hand.forEach(card => {\n          const cardData = cards[card.card];\n          if (cardData.family === 'tea') {\n            teaCards.push(\n              <CardSushiFull\n                key={`tea-${cardCounter}-${card.card}`}\n                index={card.card}\n                img={card.card}\n                cardData={cardData}\n                users={users}\n                userPlayCard={this.userPlayCard}\n                showConfirm={false}\n                revealed={card.revealed}\n              />\n            )\n            cardCounter++;\n          }\n        })\n      }\n      handDisplay.push(\n        <div key=\"tea\" className={`sushi-family tea`}>\n          {teaCards}\n        </div>\n      )\n    }\n    return (\n      <div className=\"sushi-layout\">\n        {handDisplay}\n      </div>\n    )\n  }\n\n  displayDessert = () => {\n    const localUser = this.props.localUser;\n    const users = { ...this.props.users };\n    const hand = users[localUser].playedCards ? users[localUser].playedCards.cards : false;\n    const handDisplay = [];\n    let cardCounter = 1;\n    if (hand) {\n      hand.forEach(card => {\n        const cardData = cards[card.card];\n        if (cardData.family === 'ice-cream') {\n          handDisplay.push(\n            <CardSushiFull\n              key={`ice-cream-${cardCounter}`}\n              index={card.card}\n              img={card.card}\n              cardData={cardData}\n              users={users}\n              userPlayCard={this.userPlayCard}\n              showConfirm={false}\n              revealed={card.revealed}\n            />\n          )\n          cardCounter++;\n        }\n      })\n    }\n    return handDisplay;\n  }\n\n  displayPlayerPlayedCards = () => {\n    const localUser = this.props.localUser;\n    const users = { ...this.props.users };\n    const userKeys = Object.keys(users);\n    const userColumns = [];\n    userKeys.forEach(user => {\n      if (user !== localUser) {\n        const hand = users[user].playedCards ? users[user].playedCards.cards : false;\n        const handFamilies = [];\n        const handDisplay = [];\n        if (hand) {\n          hand.forEach(card => {\n            if (!handFamilies.includes(cards[card.card].family)) {\n              if (cards[card.card].family === 'wasabi' && !handFamilies.includes('nigiri')) {\n                handFamilies.push('nigiri')\n              } else {\n                handFamilies.push(cards[card.card].family)\n              }\n            }\n          })\n        }\n        let cardCounter = 1;\n        const largestFam = {\n          family: null,\n          length: 0,\n        };\n        handFamilies.forEach(family => {\n          let makiCount = 0;\n          if (family !== 'ice-cream' && family !== 'wasabi' && family !== 'tea') {\n            const famCards = [];\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (family === 'maki' && cardData.family === 'maki' && card.revealed == true) {\n                makiCount = makiCount + cardData.value;\n              }\n              if (cardData.family === family) {\n                famCards.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    cancelled={card.cancelled}\n                    wasabiApplied={card.wasabiApplied}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n            if (family === 'maki') {\n              if (makiCount !== 0) {\n                famCards.push(\n                  <div key={`${user}-maki-count`} className=\"maki-count\">\n                    <span>{makiCount}</span>\n                  </div>\n                )\n              }\n            }\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (cardData['family'] === 'wasabi' && family === 'nigiri') {\n                famCards.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n            if (famCards.length > largestFam.length) {\n              largestFam.length = famCards.length;\n              largestFam.family = family;\n            }\n            handDisplay.push(\n              <div key={family} className={`sushi-family ${family}`}>\n                {famCards}\n              </div>\n            )\n          }\n        })\n        handDisplay.forEach(family => {\n          if (family.key === largestFam.family && family.key !== 'tea') {\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (cardData.family === 'tea') {\n                family.props.children.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n          }\n        })\n        if (largestFam.length === 0) {\n          const teaCards = [];\n          if (hand) {\n            hand.forEach(card => {\n              const cardData = cards[card.card];\n              if (cardData.family === 'tea') {\n                teaCards.push(\n                  <CardSushiSm\n                    key={`${user}-${card.card}-${cardCounter}`}\n                    cardData={cards[card.card]}\n                    img={card.card}\n                    revealed={card.revealed}\n                  />\n                )\n                cardCounter++;\n              }\n            })\n          }\n          handDisplay.push(\n            <div key=\"tea\" className={`sushi-family tea`}>\n              {teaCards}\n            </div>\n          )\n        }\n\n        cardCounter = 1;\n        const dessertDisplay = []\n        if (hand) {   \n          hand.forEach(card => {\n            const cardData = cards[card.card];\n            if (cardData.family === 'ice-cream') {\n              dessertDisplay.push(\n                <CardSushiSm\n                  key={`${user}-${card.card}-${cardCounter}`}\n                  cardData={cards[card.card]}\n                  img={card.card}\n                  revealed={card.revealed}\n                />\n              )\n              cardCounter++;\n            }\n          })\n        }   \n        userColumns.push (\n          <div key={user} className={`card-column bg-${users[user].color}-faded`}>\n            <div className={`panel-score bg-${users[user].color}`}>\n              <h2>{user}:</h2>\n              <strong className=\"score\">{users[user].score ? users[user].score : 0}</strong>\n            </div>\n            <div className=\"panel-cards\">\n              {handDisplay}\n            </div>\n            <div className={`panel-dessert bg-${users[user].color === 'pink' ? 'purple' : 'pink'}`}>\n              {dessertDisplay}\n            </div>\n          </div>\n        )\n      }\n    });\n    return userColumns;\n  }\n\n  render() {\n    const localUser = this.props.localUser;\n    const users = this.props.users;\n    return (\n      <>\n        <div className={`card-panels wrapper gutter-1-2${ this.props.roundEnd === true ? ' opacity-1-4' : ''}`}>\n        <section className=\"local-user-cards gutter-1-2\">\n          <div className={`panel-wrap bg-${users[localUser].color}-faded`}>\n            <div className={`panel-score bg-${users[localUser].color}`}>\n                <strong className=\"score\">{this.props.users[localUser].score ? this.props.users[localUser].score : 0}</strong>\n              {users[localUser].host ? <span className=\"host-badge bg-pink\">H</span> : null}\n            </div>\n            <div className=\"panel-cards\">\n              <h2>Your Sushi</h2>\n              {/* {this.displayLocalUserCards()} */}\n              {this.myPlayedCards()}\n            </div>\n              <div className={`panel-dessert bg-${users[localUser].color === 'pink' ? 'purple' : 'pink'}`}>\n              <h3>Dessert</h3>\n              <div className=\"dessert-cards\">\n                {this.displayDessert()}\n              </div>\n            </div>\n          </div>\n        </section>\n        <section className=\"user-cards gutter-1-2 push\">\n          {this.displayPlayerPlayedCards()}\n        </section>\n      </div>\n      {this.showHand()}\n      {this.props.roundEnd === true ? <RoundEnd\n        users={this.props.users}\n        localUser={this.props.localUser}\n        newRound={this.props.newRound}\n        startNewRound={this.props.startNewRound}\n        calculateScore={this.props.calculateScore}\n        round={this.props.round}\n        exitToLobby={this.props.exitToLobby}\n      /> : null}\n      </>\n    )\n  }\n\n}\n\nexport default GameBoard;","import React from 'react';\n\nclass Settings extends React.Component {\n\n  handleExitToLobby = () => {\n    this.props.exitToLobby();\n  }\n  handleRestart = () => {\n    this.props.exitToLobby();\n    this.props.startGame();\n  }\n\n  render() {\n    return (\n      <div className=\"pop-up-settings island-2\">\n        <h2 className=\"push-2\">Settings</h2>\n        <button onClick={this.props.handleSettingsDisplay} className=\"btn-x-close\">X</button>\n        <div className=\"settings-grid\">\n          <div className=\"grid-flex-v-middle grid-flex-h-split push\">\n            <h3 className=\"headline-5 push-0\">Quit current game:</h3>\n            <button className=\"btn\" onClick={this.handleExitToLobby}>Exit to Lobby</button>\n          </div>\n          <div className=\"grid-flex-v-middle grid-flex-h-split\">\n            <div>\n              <h3 className=\"headline-5 push-0\">Restart game:</h3>\n              <p className=\"push body-2\">This will start a new game with new random hands.</p>\n            </div>\n            <button className=\"btn\" onClick={this.handleRestart}>Restart Game</button>\n          </div>\n        </div>\n      </div>\n    )\n  }\n\n}\n\nexport default Settings;","import React from 'react';\nimport base from '../base';\nimport Header from './ui-elements/Header'\nimport Footer from './ui-elements/Footer'\nimport { deck, cards } from '../cardData'\nimport Lobby from './ui-elements/Lobby';\nimport GameBoard from './ui-elements/GameBoard';\nimport Settings from './ui-elements/Settings';\n\nclass App extends React.Component {\n\n  state = {\n    deck: {},\n    users: {\n      // Adam: {\n      //   userName: \"Adam\",\n      //   color: \"purple\",\n      //   host: true\n      // },\n      // Hannah: {\n      //   userName: \"Hannah\",\n      //   color: \"green\"\n      // },\n      // Patti: {\n      //   userName: \"Patti\",\n      //   color: \"turquoise\"\n      // },\n      // Hugh: {\n      //   userName: \"Hugh\",\n      //   color: \"yellow\"\n      // },\n      // Tim: {\n      //   userName: \"Tim\",\n      //   color: \"cyan\"\n      // },\n      // Caitlin: {\n      //   userName: \"Caitlin\",\n      //   color: \"navy\"\n      // },\n      // Andrew: {\n      //   userName: \"Andrew\",\n      //   color: \"pink\"\n      // },\n      // Kyla: {\n      //   userName: \"Kyla\",\n      //   color: \"red\"\n      // },\n    },\n    localUser: '',\n    gameStart: {},\n    round: {},\n    roundEnd: false,\n    hands: {},\n    settingsDisplayed: false,\n    misoPlayed: false,\n    roundScoreCalculated: false,\n  }\n\n  componentDidMount() {\n    const localStorageRef = localStorage.getItem(this.props.match.params.gamecode); //first reinstate localstorage\n    if (localStorageRef) {\n      const savedState = JSON.parse(localStorageRef);\n      this.setState({\n        deck: savedState.deck,\n        users: savedState.users,\n        gameStart: savedState.gameStart,\n        round: savedState.round,\n        hands: savedState.hands,\n      })\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/deck`, {\n        context: this,\n        state: 'deck'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/users`, {\n        context: this,\n        state: 'users'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/gameStart`, {\n        context: this,\n        state: 'gameStart'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/round`, {\n        context: this,\n        state: 'round'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/roundEnd`, {\n        context: this,\n        state: 'roundEnd'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/hands`, {\n        context: this,\n        state: 'hands'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/misoPlayed`, {\n        context: this,\n        state: 'misoPlayed'\n      });\n    } else {\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/deck`, {\n        context: this,\n        state: 'deck'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/users`, {\n        context: this,\n        state: 'users'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/gameStart`, {\n        context: this,\n        state: 'gameStart'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/round`, {\n        context: this,\n        state: 'round'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/roundEnd`, {\n        context: this,\n        state: 'roundEnd'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/hands`, {\n        context: this,\n        state: 'hands'\n      });\n      this.ref = base.syncState(`sushi-go/${this.props.match.params.gamecode}/misoPlayed`, {\n        context: this,\n        state: 'misoPlayed'\n      });\n      // console.log(this.state.gameStart)\n      // if (this.state.gameStart === {}) {\n      //   console.log('dumb gamestart')\n      // }\n    }\n    const localUser = JSON.parse(localStorage.getItem('localUser'));\n    this.setState({ localUser })\n  }\n\n  componentDidUpdate() {\n    localStorage.setItem(this.props.match.params.gamecode, JSON.stringify(this.state))\n    localStorage.setItem('localUser', JSON.stringify(this.state.localUser))\n  }\n\n  addUser = (newUser) => {\n    const userAmount = Object.keys(this.state.users).length;\n    const users = {...this.state.users};\n    if (userAmount === 0) {\n      newUser.host = true;\n      users[newUser.userName] = newUser;\n      this.setState({\n        users: users,\n        localUser: newUser.userName,\n      });\n    } else {\n      users[newUser.userName] = newUser;\n      this.setState({\n        users: users,\n        localUser: newUser.userName,\n      });\n    }\n  }\n\n  deleteUser = (user) => {\n    const users = {...this.state.users};\n    if (users[user].host === true) {\n      users[user] = null;\n      const userKeys = Object.keys(users);\n      if (users[userKeys[1]] !== undefined) {\n        if (users[userKeys[0]] === null) {\n          users[userKeys[1]].host = true;\n        } else {\n          users[userKeys[0]].host = true;\n        }\n      }\n      this.setState({ users })\n    } else {\n      users[user] = null;\n      this.setState({ users })\n    }\n  }\n\n  startGame = () => {\n    const userCount = Object.keys(this.state.users).length;\n    const fullDeck = deck();\n    this.newRound(userCount, fullDeck, true);\n    this.setState({\n      gameStart: true\n     });\n  }\n\n  startNewRound = () => {\n    const userCount = Object.keys(this.state.users).length;\n    const iceCreamLayOver = [];\n    const deckReset = deck();\n    this.state.deck.forEach(card => {\n      if (card === \"ice-cream\") {\n        iceCreamLayOver.push(card);\n      }\n    })\n    const fullDeck = [\n      ...deckReset,\n      ...iceCreamLayOver\n    ];\n    console.log(iceCreamLayOver);\n    console.log(deckReset);\n    console.log(fullDeck);\n    this.newRound(userCount, fullDeck, false);\n    this.setState({ \n      roundEnd: false,\n      roundScoreCalculated: false,\n    })\n  }\n\n  newRound = (userCount, fullDeck, newGame) => {\n    const newFullDeck = [...fullDeck];\n    let i = 0;\n    let round;\n    if (newGame) {\n      round = 1;\n      this.setState({ round })\n    } else {\n      round = this.state.round + 1;\n      this.setState({ round })\n    }\n    if (round === 1) {\n      while (i < (userCount < 6 ? 5 : 7)) {\n        newFullDeck.push('ice-cream');\n        i++;\n      }\n    } else if (round === 2) {\n      while (i < (userCount < 6 ? 3 : 5)) {\n        newFullDeck.push('ice-cream');\n        i++;\n      }\n    } else if (round === 3) {\n      while (i < (userCount < 6 ? 2 : 3)) {\n        newFullDeck.push('ice-cream');\n        i++;\n      }\n    } else {\n    }\n    // this.setState({ deck: newFullDeck })\n    console.log(newFullDeck)\n    setTimeout(() => { this.dealCards(newFullDeck) }, 1);\n  }\n\n  dealCards = (newFullDeck) => {\n    const deck = [...newFullDeck];\n    const hands = {...this.state.hands};\n    const userKeys = Object.keys(this.state.users);\n    const userCount = userKeys.length;\n    const users = {...this.state.users};\n    let handSize;\n    let hCounter = 0;\n    let dCounter = 0;\n    if (userCount < 4) {\n      handSize = 10;\n    } else if (userCount < 6) {\n      handSize = 9;\n    } else if (userCount < 8) {\n      handSize = 8;\n    } else {\n      handSize = 7;\n    }\n    while (hCounter < handSize) {\n      for (let h = 0; h < userCount; h++) {\n        const cardNumber = Math.floor(Math.random() * deck.length);\n        const card = deck[cardNumber]\n        if (hands[h] === undefined) {\n          hands[h] = [];\n          hands[h].push(card);\n        } else {\n          hands[h].push(card);\n        }\n        deck.splice(cardNumber, 1);\n      }\n      hCounter++;\n    }\n    while (dCounter < userCount) {\n      users[userKeys[dCounter]].handRef = dCounter;\n      if (users[userKeys[dCounter]].playedCards && users[userKeys[dCounter]].playedCards.cards.length > 1) {\n        const keepDesserts = [];\n        users[userKeys[dCounter]].playedCards.cards.forEach((card, index) => {\n          if (card.card === 'ice-cream') {\n            keepDesserts.push({card: 'ice-cream', revealed: true});\n          }\n        })\n        users[userKeys[dCounter]].playedCards = {\n          cards: [...keepDesserts],\n          ready: false,\n        }\n      } else {\n        users[userKeys[dCounter]].playedCards = {\n          cards: [],\n          ready: false,\n        }\n      }\n      dCounter++;\n    }\n    this.setState({ deck, hands, users });\n  }\n\n  playCard = (card) => {\n    const localUser = this.state.localUser;\n    const users = {...this.state.users};\n    const userKeys = Object.keys(users);\n    const hands = {...this.state.hands};\n    const handRef = users[localUser].handRef;\n    // Add to users played cards\n    if (!users[localUser].playedCards.cards) {\n      users[localUser].playedCards.cards = [];\n    }\n    // const playedAmount = Object.keys(users[localUser].playedCards.cards).length;\n    if ((card === 'egg' || card === 'squid' || card === 'salmon') && users[localUser].playedCards.wasabiWaiting) {\n      users[localUser].playedCards.cards.push({\n        card: card,\n        scored: false,\n        revealed: false,\n        wasabiApplied: true\n      })\n      users[localUser].playedCards.wasabiWaiting = false;\n    } else if (card === 'miso-soup') {\n      // const cardNum = users[localUser].playedCards.cards.length;\n      // let misoPlayed = false;\n      // userKeys.forEach(user => {\n      //   if (user !== localUser) {\n      //     if (users[user].playedCards.cards && users[user].playedCards.cards[cardNum] && users[user].playedCards.cards[cardNum].card === 'miso-soup') {\n      //        misoPlayed = true;\n      //       users[user].playedCards.cards[cardNum].cancelled = true;\n      //     }\n      //   }\n      // })\n      if (this.state.misoPlayed === true) {\n        userKeys.forEach(user => {\n          let length =  0;\n          let cardsCopy = [];\n          if (users[user].playedCards.cards) {\n            cardsCopy = [...users[user].playedCards.cards];\n            length = users[user].playedCards.cards.length;\n          }\n          const lastCard = cardsCopy.pop();\n          if (lastCard && lastCard.card === 'miso-soup' && users[user].playedCards.ready) {\n            users[user].playedCards.cards[length - 1].cancelled = true;\n          }\n        })\n        users[localUser].playedCards.cards.push({\n          card: card,\n          scored: false,\n          revealed: false,\n          cancelled: true,\n        })\n      } else {\n        users[localUser].playedCards.cards.push({\n          card: card,\n          scored: false,\n          revealed: false,\n          cancelled: false,\n        })\n        this.setState({ misoPlayed: true })\n      }\n    } else {\n      users[localUser].playedCards.cards.push({\n        card: card,\n        scored: false,\n        revealed: false,\n      })\n    }\n    if (card === 'wasabi') {\n      users[localUser].playedCards.wasabiWaiting = true;\n    }\n    // mark user as ready\n    users[localUser].playedCards.ready = true;\n    this.setState({ users })\n    // remove from hands state\n    const newHand = [\n      ...hands[handRef].slice(0, hands[handRef].indexOf(card)),\n      ...hands[handRef].slice(hands[handRef].indexOf(card) + 1),\n    ]\n    hands[handRef] = newHand;\n    setTimeout(() => { this.setState({ hands }) }, 500);\n    // check if all players are ready\n    let i = 0;\n    let ready = false;\n    while (i < userKeys.length) {\n      if (!users[userKeys[i]].playedCards.ready) {\n        i++\n        ready = false;\n        break;\n      }\n      ready = true;\n      i++\n    }\n    if (ready) {\n      this.revealCards()\n      this.setState({ misoPlayed: false })\n    }\n  }\n\n  revealCards = () => {\n    const users = { ...this.state.users };\n    const userKeys = Object.keys(users);\n    const hands = {...this.state.hands}\n    userKeys.forEach(key => {\n      const cards = users[key].playedCards.cards;\n      cards.forEach(card => {\n        card.revealed = true;\n      })\n      const handRef = users[key].handRef;\n      if (handRef === userKeys.length - 1) {\n        users[key].handRef = 0;\n      } else {\n        users[key].handRef++;\n      }\n      if (Object.keys(hands).length < userKeys.length) {\n        setTimeout(() => {\n          if (this.state.roundScoreCalculated === false) {\n            this.calculateScore();\n          }\n          this.setState({ roundEnd: true })\n          this.setState({ roundScoreCalculated: true })\n        }, 1000)\n      } else {\n        users[key].playedCards.ready = false;\n      }\n    })\n    // rotate hands\n    this.setState({ users })\n  }\n\n  calculateScore = () => {\n    const users = { ...this.state.users }\n    const userKeys = Object.keys(users);\n    const userCount = userKeys.length;\n    const makiCompare = {};\n    const round = this.state.round;\n    userKeys.forEach(user => {\n      const userCards = users[user].playedCards.cards;\n      let score = 0;\n      let tempura = 0;\n      let sashimi = 0;\n      let makiScore = 0;\n      let teaPlayed = false;\n      let desserts = 0;\n      const famCount = {};\n      if (users[user].score) {\n        score = users[user].score;\n      }\n      userCards.forEach(card => {\n        if (famCount[cards[card.card].family]) {\n          if (cards[card.card].family === 'wasabi') {\n            famCount['nigiri'] = famCount['nigiri'] + 1;\n          } else {\n            famCount[cards[card.card].family] = famCount[cards[card.card].family] + 1;\n          }\n        } else {\n          if (cards[card.card].family === 'wasabi') {\n            famCount['nigiri'] = 1;\n          } else {\n            famCount[cards[card.card].family] = 1;\n          }\n        }\n        if (!card.scored) {\n          if (cards[card.card].family === 'nigiri') {\n            if (card.wasabiApplied) {\n              score = score + (cards[card.card].value * 3);\n            } else {\n              score = score + cards[card.card].value;\n            }\n            card.scored = true;\n          } else if (cards[card.card].family === 'miso-soup' && !card.cancelled) {\n            score = score + 3;\n            card.scored = true;\n          } else if (card.card === 'tempura') {\n            tempura++;\n            card.scored = true;\n          } else if (card.card === 'sashimi') {\n            sashimi++;\n            card.scored = true;\n          } else if (cards[card.card].family === 'maki') {\n            makiScore = makiScore + cards[card.card].value;\n            card.scored = true;\n          } else if (cards[card.card].family === 'tea') {\n            teaPlayed = true;\n          } else if (round === 3 && cards[card.card].family === 'ice-cream') {\n            desserts = desserts + 1;\n            card.scored = true;\n          }\n        }\n\n      })\n      if (tempura >= 2) {\n        const tempuraScore = Math.floor(tempura / 2) * 5;\n        score = score + tempuraScore;\n      }\n      if (sashimi >= 3) {\n        const sashimiScore = Math.floor(sashimi / 3) * 10;\n        score = score + sashimiScore;\n      }\n      if (makiScore > 0) {\n        makiCompare[user] = makiScore;\n      }\n      if (teaPlayed) {\n        const famCountOrdered = Object.entries(famCount).sort(function (a, b) {\n          const aPrice = a[1];\n          const bPrice = b[1];\n          return bPrice - aPrice;\n        });\n        score = score + famCountOrdered[0][1];\n      }\n      if (desserts >= 4) {\n        const dessertScore = Math.floor(desserts / 4) * 12;\n        score = score + dessertScore;\n      }\n      users[user].score = score;\n      users[user].playedCards.cards = userCards;\n    })\n    if (Object.keys(makiCompare).length !== 0) {\n      // const numbersSorted = numbers.sort((aItem, bItem) => aItem - bItem);\n      const makiWinnerOrder = Object.entries(makiCompare).sort(function (a, b) {\n        const aPrice = a[1];\n        const bPrice = b[1];\n        return bPrice - aPrice;\n      });\n      if (userCount > 6) {\n        let firstPlace;\n        let secondPlace;\n        let thirdPlace;\n        makiWinnerOrder.forEach((winner, index) => {\n          if (index === 0) {\n            users[winner[0]].score = users[winner[0]].score + 6;\n            firstPlace = winner[1];\n          } else if (index === 1) {\n            if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else {\n              users[winner[0]].score = users[winner[0]].score + 4;\n              secondPlace = winner[1];\n            }\n          } else if (index === 2) {\n            if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else if (winner[1] === secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 4;\n            } else {\n              users[winner[0]].score = users[winner[0]].score + 2;\n              thirdPlace = winner[1];\n            }\n          } else {\n            if (!secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 4;\n              secondPlace = winner[1];\n            } else if (!thirdPlace) {\n              users[winner[0]].score = users[winner[0]].score + 2;\n              thirdPlace = winner[1];\n            } else if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else if (winner[1] === secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 4;\n            } else if (winner[1] === thirdPlace) {\n              users[winner[0]].score = users[winner[0]].score + 2;\n            }\n          }\n        }) \n      } else {\n        let firstPlace;\n        let secondPlace;\n        makiWinnerOrder.forEach((winner, index) => {\n          if (index === 0) {\n            users[winner[0]].score = users[winner[0]].score + 6;\n            firstPlace = winner[1];\n          } else if (index === 1) {\n            if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else {\n              users[winner[0]].score = users[winner[0]].score + 3;\n              secondPlace = winner[1];\n            }\n          } else {\n            if (!secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 3;\n              secondPlace = winner[1];\n            } else if (winner[1] === firstPlace) {\n              users[winner[0]].score = users[winner[0]].score + 6;\n            } else if (winner[1] === secondPlace) {\n              users[winner[0]].score = users[winner[0]].score + 3;\n            }\n          }\n        }) \n      }\n    }\n    this.setState({ users })\n  }\n\n  subtitleDisplay = () => {\n    if (typeof this.state.gameStart === \"object\" || this.state.gameStart === false) {\n      return 'Lobby'\n    } else {\n      return `Round ${this.state.round}`\n    }\n  }\n\n  handleSettingsDisplay = () => {\n    if (this.state.settingsDisplayed) {\n      this.setState({ settingsDisplayed: false })\n    } else {\n      this.setState({ settingsDisplayed: true })\n    }\n  }\n\n  settingsDisplay = () => {\n    return (\n      <Settings\n        handleSettingsDisplay={this.handleSettingsDisplay}\n        exitToLobby={this.exitToLobby}\n        startGame={this.startGame}\n      />\n    )\n  }\n\n  exitToLobby = () => {\n    const users = {...this.state.users}\n    const userKeys = Object.keys(users);\n\n    userKeys.forEach(user => {\n      users[user].playedCards = null;\n      users[user].handRef = null;\n      users[user].score = null;\n    })\n    this.setState({\n      gameStart: false,\n      round: null,\n      hands: null,\n      deck: null,\n      misoPlayed: false,\n      users: users,\n      roundScoreCalculated: false,\n      roundEnd: false,\n    })\n    this.setState({ settingsDisplayed: false })\n  }\n\n  gameBoardDisplay = () => {\n    const gamecode = this.props.match.params.gamecode;\n    const users = Object.keys(this.state.users);\n    const localUser = this.state.localUser;\n    if (this.state.gameStart === true && users.includes(localUser)) {\n      const userCount = Object.keys(this.state.users).length;\n      return (\n        <GameBoard\n          users={this.state.users}\n          localUser={this.state.localUser}\n          deck={this.state.deck}\n          hands={this.state.hands}\n          userCount={userCount}\n          playCard={this.playCard}\n          settingsDisplayed={this.state.settingsDisplayed}\n          handleSettingsDisplay={this.handleSettingsDisplay}\n          roundEnd={this.state.roundEnd}\n          newRound={this.newRound}\n          startNewRound={this.startNewRound}\n          calculateScore={this.calculateScore}\n          round={this.state.round}\n          exitToLobby={this.exitToLobby}\n        />\n      )\n    } else {\n      return (\n        <Lobby\n          gamecode={gamecode}\n          users={this.state.users}\n          addUser={this.addUser}\n          deleteUser={this.deleteUser}\n          localUser={this.state.localUser}\n          startGame={this.startGame}\n        />\n      )\n    }\n  }\n\n  render() {\n    const gamecode = this.props.match.params.gamecode;\n    const localUser = this.state.localUser;\n    const users = {...this.state.users};\n    const host = users[localUser] ? users[localUser].host : false; \n    return (\n      <>\n        <Header\n          subtitle={this.subtitleDisplay()}\n          gamecode={gamecode}\n          host={host}\n          handleSettingsDisplay={this.handleSettingsDisplay}\n          gameStart={this.state.gameStart}\n        />\n        <main id=\"main\" role=\"main\" className={`flex pad-t-6${this.state.settingsDisplayed ? ' opacity-1-4' : ''}`}>\n          {this.gameBoardDisplay()}\n        </main>\n        {this.state.settingsDisplayed && this.settingsDisplay()}\n        <Footer />\n      </>\n    )\n  }\n\n}\n\nexport default App;","export function formatPrice(cents) {\n  return (cents / 100).toLocaleString(\"en-US\", {\n    style: \"currency\",\n    currency: \"USD\"\n  });\n}\n\nexport function rando(arr) {\n  return arr[Math.floor(Math.random() * arr.length)];\n}\n\nexport function slugify(text) {\n  return text\n    .toString()\n    .toLowerCase()\n    .replace(/\\s+/g, \"-\")\n    .replace(/[^\\w-]+/g, \"\")\n    .replace(/--+/g, \"-\")\n    .replace(/^-+/, \"\")\n    .replace(/-+$/, \"\");\n}\n\nexport function getFunName() {\n  const adjectives = [\n    \"adorable\",\n    \"beautiful\",\n    \"clean\",\n    \"drab\",\n    \"elegant\",\n    \"fancy\",\n    \"glamorous\",\n    \"handsome\",\n    \"long\",\n    \"magnificent\",\n    \"old-fashioned\",\n    \"plain\",\n    \"quaint\",\n    \"sparkling\",\n    \"ugliest\",\n    \"unsightly\",\n    \"angry\",\n    \"bewildered\",\n    \"clumsy\",\n    \"defeated\",\n    \"embarrassed\",\n    \"fierce\",\n    \"grumpy\",\n    \"helpless\",\n    \"itchy\",\n    \"jealous\",\n    \"lazy\",\n    \"mysterious\",\n    \"nervous\",\n    \"obnoxious\",\n    \"panicky\",\n    \"repulsive\",\n    \"scary\",\n    \"thoughtless\",\n    \"uptight\",\n    \"worried\"\n  ];\n\n  const nouns = [\n    \"women\",\n    \"men\",\n    \"children\",\n    \"teeth\",\n    \"feet\",\n    \"people\",\n    \"leaves\",\n    \"mice\",\n    \"geese\",\n    \"halves\",\n    \"knives\",\n    \"wives\",\n    \"lives\",\n    \"elves\",\n    \"loaves\",\n    \"potatoes\",\n    \"tomatoes\",\n    \"cacti\",\n    \"foci\",\n    \"fungi\",\n    \"nuclei\",\n    \"syllabuses\",\n    \"analyses\",\n    \"diagnoses\",\n    \"oases\",\n    \"theses\",\n    \"crises\",\n    \"phenomena\",\n    \"criteria\",\n    \"data\"\n  ];\n\n  return `${rando(adjectives)}-${rando(adjectives)}-${rando(nouns)}`;\n}\n\n// export function gameCode() {\n//   return slugify(`${rando(wordlist)}-${rando(wordlist)}-${rando(wordlist)}`);\n// }\n\nexport function gameCode() {\n  const letters = [\"a\", \"b\", \"c\", \"d\", \"e\", \"f\", \"g\", \"h\", \"i\", \"j\", \"k\", \"l\", \"m\", \"n\", \"o\", \"p\", \"q\", \"r\", \"s\", \"t\", \"u\", \"v\", \"w\", \"x\", \"y\", \"z\"];\n  const firstLetter = letters[Math.floor(Math.random() * letters.length)];\n  const secondLetter = letters[Math.floor(Math.random() * letters.length)];\n  const thirdLetter = letters[Math.floor(Math.random() * letters.length)];\n  return firstLetter + Math.floor(Math.random() * 10) + secondLetter + Math.floor(Math.random() * 10) + thirdLetter;\n}","import React from 'react';\nimport Header from '../ui-elements/Header'\nimport Footer from '../ui-elements/Footer'\nimport { slugify, gameCode } from '../../helpers'\n\nclass Join extends React.Component {\n  gcInput = React.createRef();\n  joinGame = (e) => {\n    // stop form from submiting\n    e.preventDefault();\n    // get gamecode from input\n    const gamecode = this.gcInput.current.value;\n    //change page to the gamecode\n    this.props.history.push(`/${slugify(gamecode)}`);\n  }\n\n  render() {\n    return (\n      <>\n        <Header />\n        <main id=\"main\" role=\"main\" className=\"flex-children-center pad-t-b-8\">\n          <form className=\"pop-up-join-game island-2\" onSubmit={this.joinGame}>\n            <h2>Join or host a game!</h2>\n            <p>To start a new game, simply enter your name and a new unique <strong>Gamecode</strong> in the form below and hit <em>Start Playing</em>! If you wish to join a game someone else created, enter your name and their <strong>Gamecode</strong> and hit <em>Start Playing</em>!</p>\n            <div className=\"grid-flex\">\n              <input\n                className=\"xs-1-2\"\n                type=\"text\"\n                ref={this.gcInput}\n                required\n                placeholder=\"Enter Gamecode\"\n                defaultValue={gameCode()}\n              />\n              <button className=\"btn btn-medium btn-no-shadow xs-1-2\" type=\"submit\">Start Playing!</button>\n            </div>\n          </form>\n        </main>\n        <Footer />\n      </>\n    )\n  }\n\n}\n\nexport default Join;","import React from 'react';\nimport { BrowserRouter, Switch, Route } from 'react-router-dom';\nimport App from './App';\nimport Join from './pages/Join';\n\nclass Router extends React.Component {\n\n  render() {\n    return (\n      <BrowserRouter>\n          <Switch>\n            <Route exact path='/' component={Join} />\n            <Route path='/:gamecode' component={App} />\n          </Switch>\n      </BrowserRouter>\n    )\n  }\n\n}\n\nexport default Router;","import React from 'react';\nimport { render } from 'react-dom';\nimport Router from './components/Router.js';\n\nrender(<Router />, document.querySelector('#react-loader'));"],"sourceRoot":""}